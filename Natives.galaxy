native void DebugString(string p1);
native void DebugUnit(unit p1);
native void DebugInt(int p1);
native void DebugFixed(fixed p1);
native void DebugPoint(point p1);
native void DebugDump(int p1);
native void AISetDifficulty(int p1, int p2, bool p3);
native bool AIGetDifficulty(int p1, int p2);
native void AIStart(int p1, bool p2, int p3);
native void AIDisableAllScouting();
native bool AIGivingUp(int p1);
native void AIGoodGame(int p1);
native bool AIIsCampaign(int p1);
native bool AIHasHumanAlly(int p1);
native void AISetAPM(int p1, int p2);
native unit AIGrabUnit(int p1, string p2, int p3, point p4);
native int AIState(int p1, int p2);
native void AISetSpecificState(int p1, int p2, int p3);
native void AISetAllStates(int p1, int p2);
native void AISetFlag(int p1, int p2, bool p3);
native bool AIGetFlag(int p1, int p2);
native void AITechFlag(int p1, int p2, int p3, string p4, int p5);
native void AIResetUserData(int p1);
native void AISetUserString(int p1, int p2, string p3);
native string AIGetUserString(int p1, int p2);
native void AISetUserInt(int p1, int p2, int p3);
native int AIGetUserInt(int p1, int p2);
native void AIAddStringInt(int p1, string p2, int p3);
native fixed AIGetTime();
native int AIPathingCostMap(point p1, point p2);
native int AIPathingCostUnit(unit p1, point p2, bool p3);
native int AIGetTotalStartLocs();
native int AIGetGroundStartLocs(point p1);
native int AIGetAirStartLocs(point p1);
native int AIGetTotalTownLocs();
native int AIGetGroundTownLocs(point p1);
native int AIGetAirTownLocs(point p1);
native int AIRandomVal(int p1, int p2);
native void AINewChooseSubState(int p1, int p2, int p3, int p4, int p5);
native void AISetSubStateChance(int p1, int p2);
native void AISetSubStateChanceRace(int p1, int p2, int p3, int p4, int p5);
native int AIChooseSubState();
native bool AIWantsMultipleTransport(int p1);
native void AISetWantsMultipleTransport(int p1, bool p2);
native int AIGetNumMobileTransports(int p1);
native point AIGetBestCreepSpot(int p1, unit p2, fixed p3);
native void AIAddDetectionDanger(int p1, string p2);
native bool AIDefaultSuspectDetectionDanger(int p1);
native bool AIAnyWorkersFleeingNearby(int p1, point p2, fixed p3);
native int AIGetNumEnemies(int p1);
native int AIGetNumAllies(int p1);
native int AIGetEnemyRaceVal(int p1);
native point AIPlacementNearbyFindTest(int p1, point p2, fixed p3, string p4);
native void AIAddToExtraScoutGroup(int p1, unit p2);
native bool AIOfferNewScout(int p1, unit p2);
native void AIAddHealer(int p1, string p2, string p3, int p4);
native unit AIGetDropoffWithFewestGuards(int p1, string p2);
native bool AIHasNearbyAttackers(int p1, point p2, fixed p3);
native bool AIAnyAllyAttacking(int p1);
native point AIBestAllyAttackPoint(int p1, wave p2);
native bool AIAnyAllyNeedsDefending(int p1, wave p2);
native point AIBestAllyDefendPoint(int p1, wave p2);
native void AIGlobalSuicide(int p1);
native wave AIUnitGetWave(unit p1);
native unitgroup AIWaveGetUnits(wave p1);
native unitgroup AIGetAllEscorts(unit p1);
native unitgroup AIGetAllEscortsGroup(unitgroup p1);
native void AIRemoveUnitFromAnyWaves(unit p1);
native void AIRemoveGroupFromAnyWaves(unitgroup p1);
native void AIRemoveUnitFromAnyWavesAndSetHome(unit p1, point p2);
native void AIRemoveGroupFromAnyWavesAndSetHome(unitgroup p1, point p2);
native unitgroup AIGetUnitsInWavesWithTarget(int p1, wavetarget p2);
native bool AIIsScriptControlled(unit p1);
native void AISetUnitScriptControlled(unit p1, bool p2);
native void AISetGroupScriptControlled(unitgroup p1, bool p2);
native bool AIIsSuicideUnit(unit p1);
native void AISetUnitSuicide(unit p1, bool p2);
native void AISetGroupSuicide(unitgroup p1, bool p2);
native bool AIIsNotUsableInWaves(unit p1);
native void AISetUnitNotUsableInWaves(unit p1, bool p2);
native void AISetGroupNotUsableInWaves(unitgroup p1, bool p2);
native void AISetWantsToUpgrade(unit p1);
native void AISetUnitForceMover(unit p1, bool p2);
native void AISetGroupForceMover(unitgroup p1, bool p2);
native void AIInitCampaignTowns(int p1);
native void AIInitCampaignHarvest(int p1);
native void AIDeclareTown(int p1, int p2, point p3);
native int AIGetMainTown(int p1);
native void AISetMainTown(int p1, int p2);
native void AIUpdateMainTown(int p1);
native bool AIIsTownFull(int p1, int p2);
native int AIGetTownState(int p1, int p2);
native fixed AIGetTownEstablishedTime(int p1, int p2);
native point AIGetTownLocation(int p1, int p2);
native int AIGetClosestTown(int p1, point p2);
native int AIGetNextUnusedTownSlot(int p1);
native int AIGetBuildingCountInTown(int p1, int p2, string p3, int p4);
native bool AIIsTownHarvestRunning(int p1, int p2);
native void AIHarvest(int p1, int p2);
native void AIHarvestRate(int p1, int p2);
native void AIHarvestBonus(int p1, fixed p2);
native void AISetGasPeonCountOverride(int p1, int p2, int p3);
native int AIGetCurPeonCount(int p1, int p2);
native int AIGetMinPeonCount(int p1, int p2);
native int AIGetMaxPeonCount(int p1, int p2);
native int AIGetMineralAmountLeft(int p1, int p2);
native int AIGetGasAmountLeft(int p1, int p2);
native int AIGetMineralNumSpots(int p1, int p2);
native int AIGetHarvestableGasNumSpots(int p1, int p2);
native int AIGetRawGasNumSpots(int p1, int p2);
native point AIGetGatherLocation(int p1, int p2);
native point AIGetGatherDefLocation(int p1, int p2);
native int AIExpand(int p1, point p2, string p3);
native unitgroup AIGetTownThreats(int p1, int p2);
native unit AIGetObstruction(int p1);
native bool AIHasNearbyOpenExpansion(int p1);
native void AIScout(int p1);
native void AISetNumScouts(int p1, int p2);
native void AISetScoutTimes(int p1, int p2, int p3, int p4, int p5);
native point AIGetNextScoutLoc(int p1);
native void AIClearCampaignScout(int p1);
native void AIBuild(int p1, int p2, int p3, string p4, int p5, int p6);
native void AITrain(int p1, int p2, int p3, string p4, int p5);
native void AIResearch(int p1, int p2, int p3, string p4);
native void AIMakeAlways(int p1, int p2, int p3, string p4, int p5);
native void AIMakeOnce(int p1, int p2, int p3, string p4, int p5);
native void AIClearBuildQueue(int p1);
native void AIClearTrainQueue(int p1);
native void AIClearResearchQueue(int p1);
native bool AIHasRes(int p1, int p2, int p3);
native int AITechCount(int p1, string p2, int p3);
native void AITechCountFixupSingle(int p1, string p2, string p3);
native void AITechCountFixupEither(int p1, string p2, string p3, string p4);
native void AITechCountFixupInOrder(int p1, string p2, string p3, string p4);
native int AIKnownUnitCount(int p1, int p2, string p3);
native void AIResetCounterUnits(int p1);
native void AICounterUnitSetup(int p1, string p2, fixed p3, string p4, fixed p5, string p6);
native int AICounterUnitsSameTech(int p1, int p2, string p3);
native int AICounterUnitsAnyTech(int p1, int p2, string p3);
native point AIGetRallyPoint(unit p1);
native void AISetPowerBuilding(int p1, string p2);
native void AISetCreepBuilding(int p1, string p2, string p3);
native void AIClearStock(int p1);
native void AIEnableStock(int p1);
native void AISetStockEx(int p1, int p2, int p3, string p4, int p5, int p6);
native void AISetStock(int p1, int p2, string p3);
native void AISetStockOpt(int p1, int p2, string p3);
native void AISetStockUnitNext(int p1, int p2, string p3, bool p4);
native bool AISetStockTown(int p1, string p2, string p3);
native bool AISetStockExpand(int p1, string p2, int p3);
native void AISetStockExtra(int p1, int p2, string p3, int p4);
native void AISetStockFarms(int p1, string p2, bool p3);
native void AISetStockPeons(int p1, int p2, string p3, bool p4, bool p5);
native void AINewTechStock(int p1);
native void AITechStockAdd(string p1);
native void AISetStockTechNext(int p1);
native void AIDefaultEconomy(int p1, string p2, string p3, string p4, string p5, int p6, bool p7);
native void AIDefaultExpansion(int p1, string p2, int p3, int p4, int p5);
native void AIClearLimitTech(int p1);
native void AILimitTech(int p1, int p2, int p3, int p4, int p5, int p6, int p7);
native void AIImportantTech(int p1, string p2);
native void AILimitStockLarva(int p1, string p2);
native bool AIHasStock(int p1);
native bool AIHasStockFromTown(int p1, int p2);
native void AIRemoveStockFromTown(int p1, int p2);
native int AIDefaultGetObjectType(int p1, string p2);
native string AIDefaultGetMaker(int p1, string p2);
native string AIDefaultGetFirstMissingReq(int p1, string p2);
native string AIDefaultGetFirstUnfinishedReq(int p1, string p2);
native int AIDefaultGetFullMakeTime(int p1, string p2);
native string AIGetBaseName(string p1);
native string AIGetBuildAtName(string p1);
native void AIReqCountAsBuiltObject(int p1, string p2);
native void AIReqAddSpecialMaker(string p1, string p2, string p3, int p4);
native void AISetNukeNukeCastTime(int p1, fixed p2);
native void AISetNukeCloakCost(int p1, fixed p2);
native void AISetNukeCloakRegenRate(int p1, fixed p2);
native void AISetNukeGhost(int p1, string p2);
native void AISetNukeNukeEffect(int p1, string p2);
native void AISetNukeCloak(int p1, string p2);
native void AISetNukeNukeAbilLink(int p1, string p2);
native void AISetNukeCloakAbilLink(int p1, string p2);
native void AISetNukeDamage(int p1, fixed p2, fixed p3);
native void AISetNukeRadiusClose(int p1, fixed p2, fixed p3);
native void AISetNukeRadiusMedium(int p1, fixed p2, fixed p3);
native void AISetNukeRadiusFar(int p1, fixed p2, fixed p3);
native void AIBaseThink(unit p1, unitgroup p2);
native bool AIEvalTacticalData(unit p1, string p2);
native int AICast(unit p1, order p2, marker p3, bool p4);
native int AICastFlee(unit p1, unit p2, int p3, marker p4);
native int AICastCooldown(unit p1, order p2, marker p3, bool p4, int p5, fixed p6);
native int AISetCooldown(unit p1, int p2, fixed p3);
native bool AITactCooldownAllow(unit p1, int p2);
native bool AINearbyUnits(int p1, string p2, point p3, fixed p4, int p5);
native unitgroup AIFindUnits(int p1, string p2, point p3, fixed p4, int p5);
native bool AISameCommand(unit p1, unit p2);
native unit AILastAttacker(unit p1);
native int AILastAttack(unit p1);
native bool AIControlWantsToMove(unit p1);
native bool AIControlForceToMove(unit p1);
native bool AIControlWantsToUnburrow(unit p1);
native bool AIControlWantsToBurrow(unit p1);
native bool AIControlForceUnburrow(unit p1);
native bool AIUnitIsInCombat(unit p1);
native bool AIIsIgnoredByWave(unit p1);
native void AISetIgnoredByWave(unit p1, bool p2);
native point AIGetHomePosition(unit p1);
native point AIGetCloakedAttacker(int p1);
native void AIClearCloakedAttacker(int p1, point p2);
native bool AISawCloakedUnit(int p1);
native point AIRandomSpawnPoint(int p1, region p2, fixed p3, fixed p4, fixed p5);
native point AIBestTargetPoint(unitgroup p1, int p2, int p3, fixed p4, fixed p5, point p6, fixed p7, int p8);
native aifilter AIFilter(int p1);
native void AISetFilterAlliance(aifilter p1, int p2);
native void AISetFilterMarker(aifilter p1, int p2, int p3, marker p4);
native void AISetFilterSelf(aifilter p1, unit p2);
native void AISetFilterBits(aifilter p1, unitfilter p2);
native void AISetFilterRange(aifilter p1, unit p2, fixed p3);
native void AISetFilterInCombat(aifilter p1, bool p2);
native void AISetFilterLife(aifilter p1, fixed p2, fixed p3);
native void AISetFilterLifeLost(aifilter p1, fixed p2, fixed p3);
native void AISetFilterLifePercent(aifilter p1, fixed p2, fixed p3);
native void AISetFilterLifeSortReference(aifilter p1, fixed p2, fixed p3);
native void AISetFilterLifeMod(aifilter p1, int p2, fixed p3);
native void AISetFilterLifePerMarker(aifilter p1, fixed p2, marker p3);
native void AISetFilterShields(aifilter p1, fixed p2, fixed p3);
native void AISetFilterEnergy(aifilter p1, fixed p2, fixed p3);
native void AISetFilterPlane(aifilter p1, int p2);
native void AISetFilterCanAttackEnemy(aifilter p1, int p2, int p3);
native void AISetFilterCanAttackAlly(aifilter p1, bool p2, bool p3);
native void AISetFilterBehaviorCount(aifilter p1, int p2, int p3, string p4);
native unitgroup AIGetFilterGroup(aifilter p1, unitgroup p2);
native unitgroup AIFilterGathering(unitgroup p1, int p2, fixed p3);
native unitgroup AIFilterPathable(unitgroup p1, point p2);
native unitgroup AIFilterCasters(unitgroup p1);
native unitgroup AIFilterProduction(unitgroup p1, bool p2);
native unitgroup AIGetBuildingGroup(int p1, int p2);
native unit AIGetClosestUnit(unit p1, unitgroup p2, bool p3);
native bool AICloakEvaluate(unit p1, fixed p2, fixed p3, fixed p4);
native void AISetTacticalAttackTargetPoint(unit p1, point p2);
native void AISetTacticalAttackTargetUnit(unit p1, unit p2);
native order AIUnitGroupGetValidOrder(unitgroup p1, order p2, unit p3, bool p4);
native bool AIIsFollowingUnit(unit p1, string p2);
native int AIGetPlayerGroup(unitgroup p1);
native bool AINearbyPlaneTest(point p1, int p2, fixed p3, int p4, int p5);
native fixed AIUnitGroupStrength(unitgroup p1);
native fixed AIAllyEnemyRatio(int p1, point p2, unitfilter p3, fixed p4, fixed p5);
native void AISetMaxBestAttackersLimit(int p1, int p2);
native unit AIDefaultCombatPriority(unitgroup p1, unitgroup p2, int p3);
native bool AICombatDiffFlagCatSpecialHighPrio(int p1, int p2);
native bool AICombatDiffFlagCatSplashHighPrio(int p1, int p2);
native bool AICombatDiffFlagCatTimedLowPrio(int p1, int p2);
native bool AICombatDiffFlagCatWorkersNormalPrio(int p1, int p2);
native bool AICombatDiffFlagCatSortBuildingsPrio(int p1, int p2);
native bool AICombatDiffFlagTieBreakHealers(int p1, int p2);
native bool AICombatDiffFlagTieBreakBonusDamage(int p1, int p2);
native bool AICombatDiffFlagTieBreakLowHP(int p1, int p2);
native bool AICombatDiffFlagTieBreakInjured(int p1, int p2);
native bool AICombatDiffFlagTieBreakDetector(int p1, int p2);
native bool AICombatDiffFlagTieBreakRange(int p1, int p2);
native void AITransportIgnore(int p1, string p2);
native void AITransportSetPanic(int p1, fixed p2);
native void AITransportSetReturn(int p1, point p2);
native waveinfo AIWaveInfoCreate();
native waveinfo AIWaveInfo(wave p1);
native void AIWaveInfoAdd(waveinfo p1, string p2, int p3);
native int AIWaveInfoAttack(waveinfo p1, int p2, point p3, wavetarget p4, int p5);
native int AIWaveInfoSuicide(waveinfo p1, int p2, point p3, wavetarget p4, int p5);
native int AIWaveInfoScout(waveinfo p1, int p2, point p3, int p4);
native string AIWaveToString(wave p1);
native text AIWaveToText(wave p1);
native wave AIWaveCreate(waveinfo p1, int p2, point p3);
native void AIWaveAddUnit(wave p1, unit p2);
native void AIWaveAddUnitPriority(wave p1, unit p2, int p3);
native void AIWaveRemoveUnit(wave p1, unit p2);
native int AIWaveUnitCount(wave p1);
native int AIWaveDetectorCount(wave p1);
native void AIWaveSetType(wave p1, int p2, wavetarget p3);
native int AIWaveState(wave p1);
native point AIWaveGoal(wave p1);
native void AIWaveDelete(wave p1);
native wavetarget AIWaveTargetUnit(unit p1);
native wavetarget AIWaveTargetUnitGroup(unitgroup p1);
native wavetarget AIWaveTargetUnitPoint(unit p1);
native wavetarget AIWaveTargetPoint(point p1);
native wavetarget AIWaveTargetPlayer(playergroup p1);
native wavetarget AIWaveTargetMelee(int p1);
native wavetarget AIWaveTargetMeleeHarass(int p1);
native wavetarget AIWaveTargetMeleeDrop(int p1, point p2, point p3);
native wavetarget AIWaveTargetMeleeDefend(int p1);
native wavetarget AIWaveTargetMerge(wave p1);
native wavetarget AIWaveTargetPatrol(int p1);
native wavetarget AIWaveTargetEscort(unitgroup p1, int p2);
native wavetarget AIWaveTargetEscortNL(unitgroup p1, int p2);
native wavetarget AIWaveTargetGatherO(int p1, int p2);
native wavetarget AIWaveTargetGatherD(int p1, int p2);
native wavetarget AIWaveTargetRegion(region p1, int p2);
native point AIWaveTargetGatherOPoint(int p1, int p2);
native point AIWaveTargetGatherDPoint(int p1, int p2);
native wavetarget AIWaveTargetGuardHomeUnit(unit p1);
native unit AIWaveTargetGetUnit(wavetarget p1);
native unitgroup AIWaveTargetGetUnitGroup(wavetarget p1);
native wavetarget AIWaveHarassRetreat(int p1, wave p2, fixed p3);
native wavetarget AIWaveGetTarget(wave p1);
native bool AIWaveIsInCombat(wave p1);
native int AIWaveGetTimeInCombat(wave p1);
native int AIWaveGetTimeSinceCombat(wave p1);
native int AIWaveGetTimeSinceOrdered(wave p1);
native int AIWaveGetTimeSinceRetreat(wave p1);
native bool AIShouldHelpUserAlly(int p1, wave p2);
native point AIGetBestUserAllyHelpLocation(int p1, wave p2);
native bool AIDefenseThreat(int p1, int p2, wave p3);
native int AISelfDefenseThreatEval(int p1, int p2);
native int AIWaveEval(wave p1);
native int AIWaveEvalRatio(wave p1, fixed p2);
native int AIUnitAreaEvalRatio(unit p1, fixed p2);
native int AIEvalRatio(int p1);
native void AIEvalSetCustomIndex(int p1);
native int AIEvalAllAllied(int p1);
native int AIEvalLargestEnemy(int p1);
native int AILastWaveEvalStaticRatio();
native void AIWaveTargetAddWaypoint(wavetarget p1, point p2, bool p3, int p4);
native void AIWaveTargetClearWaypoints(wavetarget p1);
native wave AIWaveGet(int p1, int p2);
native void AIWaveSet(int p1, int p2, wave p3);
native int AIWaveType(wave p1);
native void AIWaveSetUserData(wave p1, int p2, int p3);
native int AIWaveGetUserData(wave p1, int p2);
native void AIWaveSetDeleteWhenEmpty(wave p1, bool p2);
native void AIWaveMerge(int p1, int p2, int p3);
native void AIWaveMergeMelee(int p1);
native wave WaveLastCreated();
native point AIGetBestTarget(int p1, playergroup p2, point p3, int p4);
native bool AIFindDropAttackTarget(int p1, point p2);
native point AILastDropLocation();
native point AILastDropGoal();
native fixed AIGetNextDropTimeCheck(int p1);
native void AISetNextDropTimeCheck(int p1, fixed p2);
native int AILastAttackRatio(wave p1);
native int AILastAttackStartEval(wave p1);
native void AIAttackWaveAddUnits(int p1, int p2, string p3);
native int AIAttackWaveSend(int p1, int p2, bool p3);
native void AIAttackWaveCancel(wave p1);
native void AIAttackWaveSetGatherPoint(int p1, point p2);
native void AIAttackWaveUseUnit(int p1, unit p2);
native void AIAttackWaveUseGroup(int p1, unitgroup p2);
native void AIAttackWaveAddEscortUnit(int p1, unit p2, unit p3, fixed p4, fixed p5);
native void AIAttackWaveAddEscortType(int p1, string p2, unit p3, fixed p4, fixed p5);
native void AIAttackWaveSetTargetUnit(int p1, unit p2);
native void AIAttackWaveSetTargetUnitGroup(int p1, unitgroup p2);
native void AIAttackWaveSetTargetUnitPoint(int p1, unit p2);
native void AIAttackWaveSetTargetPoint(int p1, point p2);
native void AIAttackWaveSetTargetPlayer(int p1, playergroup p2);
native void AIAttackWaveSetTargetMelee(int p1);
native void AIAttackWaveSetTargetMeleeHarass(int p1);
native void AIAttackWaveSetTargetMeleeDrop(int p1, point p2, point p3);
native void AIAttackWaveSetTargetMeleeDefend(int p1);
native void AIAttackWaveSetTargetMerge(int p1, wave p2);
native void AIAttackWaveSetTargetPatrol(int p1, int p2);
native void AIAttackWaveSetTargetEscort(int p1, unitgroup p2, int p3);
native void AIAttackWaveSetTargetEscortNL(int p1, unitgroup p2, int p3);
native void AIAttackWaveSetTargetGatherO(int p1, int p2);
native void AIAttackWaveSetTargetGatherD(int p1, int p2);
native void AIAttackWaveSetTargetRegion(int p1, region p2, int p3);
native void AIAttackWaveSetGatherEarlyNoReplace(int p1);
native void AIAttackWaveSetKeepAlive(int p1);
native void AIAttackWaveAddWaypoint(int p1, point p2, bool p3);
native void AIAttackWaveClearWaypoints(int p1);
native void AISetMinimumBullyCount(int p1, string p2, int p3);
native void AISetGeneralRebuildCount(int p1, bool p2, int p3);
native void AISetSpecificRebuildCount(int p1, string p2, int p3);
native void AISetBullyAttackWavePercent(int p1, int p2);
native void AINearestTownLimitWaveGather(int p1, bool p2);
native void AINearestTownBullyRebuild(int p1, bool p2);
native void AIToggleBulliesInRegion(int p1, region p2, bool p3);
native void AIResetBullyRebuildCountsInRegion(int p1, region p2);
native void AIClearAllBullies(int p1);
native void AIAddBully(int p1, string p2, point p3, int p4);
native string AIGetBullyType(unit p1);
native void AchievementAward(int p1, string p2);
native void AchievementErase(int p1, string p2);
native void AchievementPanelSetCategory(playergroup p1, string p2);
native void AchievementPanelSetVisible(playergroup p1, bool p2);
native text AchievementPercentText(int p1, string p2);
native void AchievementTermQuantitySet(int p1, string p2, int p3);
native void AchievementsDisable(int p1);
native actorscope ActorScopeCreate(string p1);
native actorscope ActorScopeLastCreated();
native actorscope ActorScopeLastCreatedSend();
native actorscope ActorScopeFrom(string p1);
native actorscope ActorScopeFromActor(actor p1);
native actorscope ActorScopeFromUnit(unit p1);
native actorscope ActorScopeFromPortrait(int p1);
native text ActorScopeGetText(actorscope p1);
native void ActorScopeKill(actorscope p1);
native void ActorScopeOrphan(actorscope p1);
native actor ActorScopeRefGet(actorscope p1, string p2);
native void ActorScopeRefSet(actorscope p1, string p2, actor p3);
native void ActorScopeSend(actorscope p1, string p2);
native actor ActorCreate(actorscope p1, string p2, string p3, string p4, string p5);
native actor ActorLastCreated();
native actor ActorLastCreatedSend();
native actor ActorFrom(string p1);
native actor ActorFromActor(actor p1, string p2);
native actor ActorFromScope(actorscope p1, string p2);
native actor ActorFromDoodad(doodad p1);
native actor ActorFromPortrait(int p1);
native text ActorGetText(actor p1);
native actor ActorRefGet(actor p1, string p2);
native void ActorRefSet(actor p1, string p2, actor p3);
native void ActorSend(actor p1, string p2);
native void ActorSendTo(actor p1, string p2, string p3);
native void ActorLookAtStart(actor p1, string p2, int p3, fixed p4, actor p5);
native void ActorLookAtStop(actor p1, string p2, int p3, fixed p4);
native void ActorLookAtTypeStart(actor p1, string p2, actor p3);
native void ActorLookAtTypeStop(actor p1, string p2);
native void ActorTextureGroupApplyGlobal(string p1);
native void ActorTextureGroupRemoveGlobal(string p1);
native void ActorWorldParticleFXDestroy();
native actor ActorRegionCreate(actorscope p1, string p2, region p3);
native void ActorRegionSend(actor p1, int p2, string p3, string p4, string p5);
native string MakeMsgAnimBracketResume(string p1, int p2, fixed p3, int p4);
native string MakeMsgAnimBracketStart(string p1, string p2, string p3, string p4, int p5, fixed p6, int p7);
native string MakeMsgAnimBracketStop(string p1, int p2, fixed p3, int p4);
native string MakeMsgAnimGroupApply(string p1, string p2, string p3, int p4, fixed p5, int p6);
native string MakeMsgAnimGroupRemove(string p1, int p2, fixed p3, int p4);
native string MakeMsgAnimPlay(string p1, string p2, int p3, fixed p4, fixed p5, fixed p6, int p7);
native string MakeMsgRefCreate(string p1);
native string MakeMsgRefSetFromRequest(string p1, string p2, string p3, int p4, int p5);
native string MakeMsgRefTableDump(int p1);
native string MakeMsgSetPhysicsState(int p1, fixed p2, fixed p3);
native string MakeMsgTextureSelectByMatch(string p1, int p2, string p3, int p4);
native string MakeMsgTextureSelectBySlot(string p1, int p2, string p3);
native string MakeMsgTextureVideoPlay(string p1, int p2, int p3, int p4, int p5, string p6);
native string MakeMsgTextureVideoStop(string p1, int p2);
native string MakeMsgTextureVideoSetFrame(string p1, int p2, int p3);
native string MakeMsgTextureVideoSetPaused(string p1, int p2, bool p3);
native string MakeMsgTextureVideoSetTime(string p1, int p2, fixed p3);
native string MakeMsgTransition(int p1, fixed p2, fixed p3);
native string TextureGetSlotName(string p1);
native int TextureGetSlotComponent(string p1);
native doodad DoodadFromId(int p1);
native void ModelAnimationLoad(string p1, string p2);
native void ModelAnimationUnload(string p1, string p2);
native bool BankExists(string p1, int p2);
native bank BankLastCreated();
native bank BankLoad(string p1, int p2);
native string BankName(bank p1);
native int BankPlayer(bank p1);
native void BankRemove(bank p1);
native void BankSave(bank p1);
native void BankDeleteCampaignBanks(int p1);
native int BankSectionCount(bank p1);
native bool BankSectionExists(bank p1, string p2);
native string BankSectionName(bank p1, int p2);
native void BankSectionRemove(bank p1, string p2);
native int BankKeyCount(bank p1, string p2);
native bool BankKeyExists(bank p1, string p2, string p3);
native string BankKeyName(bank p1, string p2, int p3);
native void BankKeyRemove(bank p1, string p2, string p3);
native bool BankValueIsType(bank p1, string p2, string p3, int p4);
native fixed BankValueGetAsFixed(bank p1, string p2, string p3);
native void BankValueSetFromFixed(bank p1, string p2, string p3, fixed p4);
native bool BankValueGetAsFlag(bank p1, string p2, string p3);
native void BankValueSetFromFlag(bank p1, string p2, string p3, bool p4);
native int BankValueGetAsInt(bank p1, string p2, string p3);
native void BankValueSetFromInt(bank p1, string p2, string p3, int p4);
native point BankValueGetAsPoint(bank p1, string p2, string p3);
native void BankValueSetFromPoint(bank p1, string p2, string p3, point p4);
native string BankValueGetAsString(bank p1, string p2, string p3);
native void BankValueSetFromString(bank p1, string p2, string p3, string p4);
native text BankValueGetAsText(bank p1, string p2, string p3);
native void BankValueSetFromText(bank p1, string p2, string p3, text p4);
native unit BankLastRestoredUnit();
native unit BankValueGetAsUnit(bank p1, string p2, string p3, int p4, point p5, fixed p6);
native void BankValueSetFromUnit(bank p1, string p2, string p3, unit p4);
native void BattleReportPanelSetSelectedBattleReport(playergroup p1, int p2);
native int BattleReportPanelGetSelectedBattleReport(int p1);
native int BattleReportCreate(playergroup p1, text p2, int p3, int p4);
native int BattleReportLastCreated();
native void BattleReportDestroy(int p1);
native void BattleReportSetState(int p1, int p2);
native void BattleReportSetPriority(int p1, int p2);
native void BattleReportSetButtonText(int p1, text p2);
native void BattleReportSetButtonImage(int p1, string p2);
native void BattleReportSetMissionText(int p1, text p2);
native void BattleReportSetResearchTitle(int p1, text p2);
native void BattleReportSetResearchText(int p1, text p2);
native void BattleReportSetBonusTitle(int p1, text p2);
native void BattleReportSetBonusText(int p1, text p2);
native void BattleReportSetWorldText(int p1, text p2);
native void BattleReportSetObjectiveTitle(int p1, text p2);
native void BattleReportSetObjectiveText(int p1, text p2);
native void BattleReportSetAchievementTitle(int p1, text p2);
native void BattleReportSetBestTimeText(int p1, text p2);
native void BattleReportSetMissionImage(int p1, string p2);
native void BattleReportSetDifficultyLevelCompleted(int p1, int p2, bool p3);
native void BattleReportSetDifficultyLevelBestTimeText(int p1, int p2, text p3);
native void BattleReportAddAchievement(int p1, string p2);
native void BattleReportSetSceneText(int p1, text p2);
native void BattleReportSetSceneImage(int p1, string p2);
native void BattleReportSetShownInMissionTotal(int p1, bool p2);
native void TriggerAddEventBattleReportPanelExit(trigger p1, int p2);
native void TriggerAddEventBattleReportPanelPlayMission(trigger p1, int p2);
native void TriggerAddEventBattleReportPanelPlayScene(trigger p1, int p2);
native void TriggerAddEventBattleReportPanelSelectionChanged(trigger p1, int p2);
native int EventBattleReportPanelMissionSelected();
native int EventBattleReportPanelDifficultySelected();
native int EventBattleReportPanelSceneSelected();
native int BoardCreate(int p1, int p2, text p3, color p4);
native int BoardLastCreated();
native void BoardDestroy(int p1);
native void BoardShowAll(bool p1, playergroup p2);
native void BoardSetPosition(int p1, int p2, int p3);
native void BoardResetPosition(int p1);
native void BoardTitleShow(int p1, playergroup p2, bool p3);
native void BoardTitleSetText(int p1, text p2);
native void BoardTitleSetColor(int p1, int p2, color p3);
native void BoardTitleSetIcon(int p1, string p2);
native void BoardTitleSetAlignment(int p1, int p2, int p3);
native void BoardTitleSetClickable(int p1, bool p2);
native void BoardSetName(int p1, text p2, color p3);
native void BoardSetState(int p1, playergroup p2, int p3, bool p4);
native void BoardMinimizeShow(int p1, playergroup p2, bool p3);
native void BoardMinimizeEnable(int p1, playergroup p2, bool p3);
native void BoardMinimizeSetState(int p1, playergroup p2, bool p3);
native void BoardMinimizeSetColor(int p1, color p2);
native void BoardSetColumnCount(int p1, int p2);
native void BoardSetRowCount(int p1, int p2);
native void BoardSetColumnWidth(int p1, int p2, fixed p3);
native void BoardSetGroupCount(int p1, int p2);
native void BoardRowSetGroup(int p1, int p2, int p3);
native void BoardItemSetText(int p1, int p2, int p3, text p4);
native void BoardItemSetTextColor(int p1, int p2, int p3, color p4);
native void BoardItemSetBackgroundColor(int p1, int p2, int p3, color p4);
native void BoardItemSetIcon(int p1, int p2, int p3, string p4, bool p5);
native void BoardItemSetAlignment(int p1, int p2, int p3, int p4);
native void BoardItemSetFontSize(int p1, int p2, int p3, int p4);
native void BoardItemSetSortValue(int p1, int p2, int p3, int p4);
native void BoardItemSetProgressShow(int p1, int p2, int p3, bool p4);
native void BoardItemSetProgressRange(int p1, int p2, int p3, fixed p4, fixed p5);
native void BoardItemSetProgressValue(int p1, int p2, int p3, fixed p4);
native void BoardItemSetProgressColor(int p1, int p2, int p3, color p4, int p5);
native void BoardSort(int p1, int p2, bool p3, int p4);
native void BoardSetPlayerColumn(int p1, int p2, bool p3);
native void BoardPlayerAdd(int p1, int p2);
native void BoardPlayerRemove(int p1, int p2);
native camerainfo CameraInfoDefault();
native camerainfo CameraInfoFromId(int p1);
native void CameraInfoSetValue(camerainfo p1, int p2, fixed p3);
native fixed CameraInfoGetValue(camerainfo p1, int p2);
native void CameraInfoSetTarget(camerainfo p1, point p2);
native point CameraInfoGetTarget(camerainfo p1);
native void CameraApplyInfo(int p1, camerainfo p2, fixed p3, fixed p4, fixed p5, bool p6);
native void CameraPan(int p1, point p2, fixed p3, fixed p4, fixed p5, bool p6);
native void CameraSetValue(int p1, int p2, fixed p3, fixed p4, fixed p5, fixed p6);
native void CameraUseModel(int p1, unit p2, string p3, fixed p4);
native void CameraForceMouseRelative(int p1, bool p2);
native void CameraLockInput(int p1, bool p2);
native void CameraSetMouseRotates(int p1, bool p2);
native void CameraSetMouseRotationSpeed(int p1, int p2, fixed p3);
native void CameraSetVerticalFieldOfView(int p1, bool p2);
native void CameraUseHeightDisplacement(int p1, bool p2);
native void CameraUseHeightSmoothing(int p1, bool p2);
native void CameraSetChannel(int p1, unit p2, string p3, int p4, fixed p5);
native void CameraClearChannel(int p1, int p2);
native void CameraSetChannelOnPortrait(int p1, camerainfo p2, fixed p3, int p4, int p5);
native void CameraClearChannelOnPortrait(int p1, int p2, int p3);
native void CameraShakeStart(int p1, int p2, int p3, fixed p4, fixed p5, fixed p6, fixed p7);
native void CameraShakeStop(int p1);
native void CameraSave(int p1);
native void CameraRestore(int p1, fixed p2, fixed p3, fixed p4);
native point CameraGetTarget(int p1);
native fixed CameraGetPitch(int p1);
native fixed CameraGetYaw(int p1);
native void CameraSetBounds(playergroup p1, region p2, bool p3);
native void CameraFollowUnitGroup(int p1, unitgroup p2, bool p3, bool p4);
native void CameraLookAt(int p1, point p2, fixed p3, fixed p4, fixed p5);
native void CameraLookAtActor(int p1, actor p2);
native void CameraLookAtUnit(int p1, unit p2);
native void TriggerAddEventCameraMove(trigger p1, int p2, int p3);
native int EventCameraMoveReason();
native void CampaignInitAI();
native void CampaignProgressSetText(playergroup p1, string p2, text p3);
native void CampaignProgressSetImageFilePath(playergroup p1, string p2, string p3);
native void CampaignProgressSetTutorialFinished(playergroup p1, string p2, bool p3);
native void CampaignProgressSetCampaignFinished(playergroup p1, string p2, bool p3);
native int AbilityClass(string p1);
native int CatalogEntryCount(int p1);
native string CatalogEntryGet(int p1, int p2);
native bool CatalogEntryIsValid(int p1, string p2);
native int CatalogEntryClass(int p1, string p2);
native string CatalogEntryParent(int p1, string p2);
native string CatalogEntryScope(int p1, string p2);
native int CatalogFieldCount(string p1);
native string CatalogFieldGet(string p1, int p2);
native bool CatalogFieldIsArray(string p1, string p2);
native bool CatalogFieldIsScope(string p1, string p2);
native string CatalogFieldType(string p1, string p2);
native int CatalogFieldValueCount(int p1, string p2, string p3, int p4);
native string CatalogFieldValueGet(int p1, string p2, string p3, int p4);
native bool CatalogFieldValueSet(int p1, string p2, string p3, int p4, string p5);
native void CharacterSheetPanelSetNameText(playergroup p1, text p2);
native void CharacterSheetPanelSetDescriptionText(playergroup p1, text p2);
native void CharacterSheetPanelSetPortraitModelLink(playergroup p1, string p2);
native void CinematicMode(playergroup p1, bool p2, fixed p3);
native void CinematicFade(bool p1, fixed p2, int p3, color p4, fixed p5, bool p6);
native void CinematicOverlay(bool p1, fixed p2, string p3, fixed p4, bool p5);
native void CinematicDataRun(int p1, playergroup p2, bool p3);
native void CinematicDataStop();
native int BoolToInt(bool p1);
native int Color255FromFixed(fixed p1);
native fixed IntToFixed(int p1);
native string IntToString(int p1);
native text IntToText(int p1);
native int FixedToInt(fixed p1);
native string FixedToString(fixed p1, int p2);
native text FixedToText(fixed p1, int p2);
native int StringToInt(string p1);
native fixed StringToFixed(string p1);
native color Color(fixed p1, fixed p2, fixed p3);
native color ColorWithAlpha(fixed p1, fixed p2, fixed p3, fixed p4);
native color ColorFromIndex(int p1, int p2);
native fixed ColorGetComponent(color p1, int p2);
native text FormatNumber(int p1);
native text FormatDuration(int p1);
native int ConversationCreate(bool p1);
native int ConversationLastCreated();
native void ConversationDestroy(int p1);
native void ConversationDestroyAll();
native void ConversationShow(int p1, playergroup p2, bool p3);
native bool ConversationVisible(int p1, int p2);
native int ConversationReplyCreate(int p1, text p2);
native int ConversationReplyLastCreated();
native void ConversationReplyDestroy(int p1, int p2);
native void ConversationReplyDestroyAll(int p1);
native void ConversationReplySetText(int p1, int p2, text p3);
native text ConversationReplyGetText(int p1, int p2);
native void ConversationReplySetState(int p1, int p2, int p3);
native int ConversationReplyGetState(int p1, int p2);
native void TriggerAddEventConversationReplySelected(trigger p1, int p2, int p3, int p4);
native int EventConversation();
native int EventConversationReply();
native int ConversationReplyGetIndex(int p1, int p2);
native int ConversationDataStateIndexCount(string p1);
native string ConversationDataStateIndex(string p1, int p2);
native text ConversationDataStateName(string p1);
native text ConversationDataStateText(string p1, string p2);
native fixed ConversationDataStateFixedValue(string p1, string p2);
native string ConversationDataStateImagePath(string p1);
native int ConversationDataStateImageEdge(string p1);
native string ConversationDataStateAttachPoint(string p1);
native string ConversationDataStateMoviePath(string p1);
native string ConversationDataStateModel(string p1, string p2);
native string ConversationDataStateUpgrade(string p1, string p2);
native abilcmd ConversationDataStateAbilCmd(string p1, string p2);
native void ConversationDataRegisterCamera(string p1, string p2, camerainfo p3, trigger p4, bool p5);
native void ConversationDataRegisterUnit(string p1, unit p2);
native void ConversationDataRegisterPortrait(string p1, int p2);
native void ConversationDataStateSetValue(string p1, int p2);
native int ConversationDataStateGetValue(string p1);
native int ConversationDataChoiceCount(string p1);
native string ConversationDataChoiceId(string p1, int p2);
native void ConversationDataChoiceSetState(string p1, string p2, int p3);
native int ConversationDataChoiceGetState(string p1, string p2);
native void ConversationDataChoiceSetPicked(string p1, string p2, bool p3);
native bool ConversationDataChoiceGetPicked(string p1, string p2);
native void ConversationDataChoiceSetPickedCount(string p1, string p2, int p3);
native int ConversationDataChoiceGetPickedCount(string p1, string p2);
native int ConversationDataLineCount(string p1);
native string ConversationDataLineId(string p1, int p2);
native void ConversationDataLineSetPickedCount(string p1, string p2, int p3);
native int ConversationDataLineGetPickedCount(string p1, string p2);
native void ConversationDataSaveStateValues(string p1, bank p2, string p3);
native void ConversationDataLoadStateValues(string p1, bank p2, string p3);
native void ConversationDataSaveStateValue(string p1, bank p2, string p3);
native void ConversationDataLoadStateValue(string p1, bank p2, string p3);
native void ConversationDataResetStateValues(string p1);
native void ConversationDataSaveNodeState(string p1, bank p2, string p3);
native void ConversationDataLoadNodeState(string p1, bank p2, string p3);
native void ConversationDataResetNodeState(string p1);
native void ConversationDataPreloadLines(string p1);
native bool ConversationDataCanRun(string p1, bool p2);
native void ConversationDataRun(string p1, playergroup p2, int p3, bool p4);
native void ConversationDataStop();
native string ConversationDataActiveSound();
native string ConversationDataActiveCamera();
native void TriggerAddEventConversationStateChanged(trigger p1, string p2);
native string EventConversationState();
native void DataTableClear(bool p1);
native int DataTableValueCount(bool p1);
native string DataTableValueName(bool p1, int p2);
native bool DataTableValueExists(bool p1, string p2);
native int DataTableValueType(bool p1, string p2);
native void DataTableValueRemove(bool p1, string p2);
native void DataTableSetAbilCmd(bool p1, string p2, abilcmd p3);
native abilcmd DataTableGetAbilCmd(bool p1, string p2);
native void DataTableSetActor(bool p1, string p2, actor p3);
native actor DataTableGetActor(bool p1, string p2);
native void DataTableSetActorScope(bool p1, string p2, actorscope p3);
native actorscope DataTableGetActorScope(bool p1, string p2);
native void DataTableSetAIFilter(bool p1, string p2, aifilter p3);
native aifilter DataTableGetAIFilter(bool p1, string p2);
native void DataTableSetBank(bool p1, string p2, bank p3);
native bank DataTableGetBank(bool p1, string p2);
native void DataTableSetBool(bool p1, string p2, bool p3);
native bool DataTableGetBool(bool p1, string p2);
native void DataTableSetByte(bool p1, string p2, byte p3);
native byte DataTableGetByte(bool p1, string p2);
native void DataTableSetCameraInfo(bool p1, string p2, camerainfo p3);
native camerainfo DataTableGetCameraInfo(bool p1, string p2);
native void DataTableSetCinematic(bool p1, string p2, int p3);
native int DataTableGetCinematic(bool p1, string p2);
native void DataTableSetColor(bool p1, string p2, color p3);
native color DataTableGetColor(bool p1, string p2);
native void DataTableSetControl(bool p1, string p2, int p3);
native int DataTableGetControl(bool p1, string p2);
native void DataTableSetConversation(bool p1, string p2, int p3);
native int DataTableGetConversation(bool p1, string p2);
native void DataTableSetDialog(bool p1, string p2, int p3);
native int DataTableGetDialog(bool p1, string p2);
native void DataTableSetDoodad(bool p1, string p2, doodad p3);
native doodad DataTableGetDoodad(bool p1, string p2);
native void DataTableSetFixed(bool p1, string p2, fixed p3);
native fixed DataTableGetFixed(bool p1, string p2);
native void DataTableSetInt(bool p1, string p2, int p3);
native int DataTableGetInt(bool p1, string p2);
native void DataTableSetMarker(bool p1, string p2, marker p3);
native marker DataTableGetMarker(bool p1, string p2);
native void DataTableSetObjective(bool p1, string p2, int p3);
native int DataTableGetObjective(bool p1, string p2);
native void DataTableSetOrder(bool p1, string p2, order p3);
native order DataTableGetOrder(bool p1, string p2);
native void DataTableSetPing(bool p1, string p2, int p3);
native int DataTableGetPing(bool p1, string p2);
native void DataTableSetPlanet(bool p1, string p2, int p3);
native int DataTableGetPlanet(bool p1, string p2);
native void DataTableSetPlayerGroup(bool p1, string p2, playergroup p3);
native playergroup DataTableGetPlayerGroup(bool p1, string p2);
native void DataTableSetPoint(bool p1, string p2, point p3);
native point DataTableGetPoint(bool p1, string p2);
native void DataTableSetPortrait(bool p1, string p2, int p3);
native int DataTableGetPortrait(bool p1, string p2);
native void DataTableSetRegion(bool p1, string p2, region p3);
native region DataTableGetRegion(bool p1, string p2);
native void DataTableSetReply(bool p1, string p2, int p3);
native int DataTableGetReply(bool p1, string p2);
native void DataTableSetRevealer(bool p1, string p2, revealer p3);
native revealer DataTableGetRevealer(bool p1, string p2);
native void DataTableSetSound(bool p1, string p2, sound p3);
native sound DataTableGetSound(bool p1, string p2);
native void DataTableSetSoundLink(bool p1, string p2, soundlink p3);
native soundlink DataTableGetSoundLink(bool p1, string p2);
native void DataTableSetString(bool p1, string p2, string p3);
native string DataTableGetString(bool p1, string p2);
native void DataTableSetText(bool p1, string p2, text p3);
native text DataTableGetText(bool p1, string p2);
native void DataTableSetTimer(bool p1, string p2, timer p3);
native timer DataTableGetTimer(bool p1, string p2);
native void DataTableSetTransmission(bool p1, string p2, int p3);
native int DataTableGetTransmission(bool p1, string p2);
native void DataTableSetTransmissionSource(bool p1, string p2, transmissionsource p3);
native transmissionsource DataTableGetTransmissionSource(bool p1, string p2);
native void DataTableSetTrigger(bool p1, string p2, trigger p3);
native trigger DataTableGetTrigger(bool p1, string p2);
native void DataTableSetUnit(bool p1, string p2, unit p3);
native unit DataTableGetUnit(bool p1, string p2);
native void DataTableSetUnitFilter(bool p1, string p2, unitfilter p3);
native unitfilter DataTableGetUnitFilter(bool p1, string p2);
native void DataTableSetUnitGroup(bool p1, string p2, unitgroup p3);
native unitgroup DataTableGetUnitGroup(bool p1, string p2);
native void DataTableSetUnitRef(bool p1, string p2, unitref p3);
native unitref DataTableGetUnitRef(bool p1, string p2);
native void DataTableSetWave(bool p1, string p2, wave p3);
native wave DataTableGetWave(bool p1, string p2);
native void DataTableSetWaveInfo(bool p1, string p2, waveinfo p3);
native waveinfo DataTableGetWaveInfo(bool p1, string p2);
native void DataTableSetWaveTarget(bool p1, string p2, wavetarget p3);
native wavetarget DataTableGetWaveTarget(bool p1, string p2);
native int DialogCreate(int p1, int p2, int p3, int p4, int p5, bool p6);
native int DialogLastCreated();
native void DialogDestroy(int p1);
native void DialogDestroyAll();
native void DialogSetSubtitlePositionOverride(int p1);
native void DialogClearSubtitlePositionOverride();
native void DialogSetTitle(int p1, text p2);
native void DialogSetSize(int p1, int p2, int p3);
native void DialogSetPosition(int p1, int p2, int p3, int p4);
native void DialogSetPositionRelative(int p1, int p2, int p3, int p4, int p5, int p6);
native void DialogSetVisible(int p1, playergroup p2, bool p3);
native void DialogSetTransparency(int p1, fixed p2);
native void DialogSetImage(int p1, string p2);
native void DialogSetImageVisible(int p1, bool p2);
native void DialogSetOffscreen(int p1, bool p2);
native void DialogSetFullscreen(int p1, bool p2);
native void DialogSetChannel(int p1, int p2);
native bool DialogIsModal(int p1);
native text DialogGetTitle(int p1);
native int DialogGetWidth(int p1);
native int DialogGetHeight(int p1);
native int DialogGetAnchor(int p1);
native int DialogGetRelativeDialog(int p1);
native int DialogGetRelativeAnchor(int p1);
native int DialogGetOffsetX(int p1);
native int DialogGetOffsetY(int p1);
native bool DialogIsVisible(int p1, int p2);
native fixed DialogGetTransparency(int p1);
native string DialogGetImage(int p1);
native bool DialogIsImageVisible(int p1);
native bool DialogIsOffscreen(int p1);
native bool DialogIsFullscreen(int p1);
native int DialogGetChannel(int p1);
native int DialogControlCreate(int p1, int p2);
native int DialogControlCreateFromTemplate(int p1, int p2, string p3);
native int DialogControlLastCreated();
native void DialogControlDestroy(int p1);
native void DialogControlDestroyAll(int p1);
native void DialogControlSetSize(int p1, playergroup p2, int p3, int p4);
native void DialogControlSetPosition(int p1, playergroup p2, int p3, int p4, int p5);
native void DialogControlSetPositionRelative(int p1, playergroup p2, int p3, int p4, int p5, int p6, int p7);
native void DialogControlSetVisible(int p1, playergroup p2, bool p3);
native void DialogControlSetEnabled(int p1, playergroup p2, bool p3);
native void DialogControlSetFullDialog(int p1, playergroup p2, bool p3);
native void DialogControlFadeTransparency(int p1, playergroup p2, fixed p3, fixed p4);
native int DialogControlGetDialog(int p1);
native int DialogControlGetType(int p1);
native int DialogControlGetWidth(int p1, int p2);
native int DialogControlGetHeight(int p1, int p2);
native int DialogControlGetAnchor(int p1, int p2);
native int DialogControlGetRelativeControl(int p1, int p2);
native int DialogControlGetRelativeAnchor(int p1, int p2);
native int DialogControlGetOffsetX(int p1, int p2);
native int DialogControlGetOffsetY(int p1, int p2);
native bool DialogControlIsVisible(int p1, int p2);
native bool DialogControlIsEnabled(int p1, int p2);
native bool DialogControlIsFullDialog(int p1, int p2);
native void DialogControlSetPropertyAsText(int p1, int p2, playergroup p3, text p4);
native void DialogControlSetPropertyAsString(int p1, int p2, playergroup p3, string p4);
native void DialogControlSetPropertyAsInt(int p1, int p2, playergroup p3, int p4);
native void DialogControlSetPropertyAsFixed(int p1, int p2, playergroup p3, fixed p4);
native void DialogControlSetPropertyAsBool(int p1, int p2, playergroup p3, bool p4);
native void DialogControlSetPropertyAsColor(int p1, int p2, playergroup p3, color p4);
native void DialogControlSetPropertyAsControl(int p1, int p2, playergroup p3, int p4);
native text DialogControlGetPropertyAsText(int p1, int p2, int p3);
native string DialogControlGetPropertyAsString(int p1, int p2, int p3);
native int DialogControlGetPropertyAsInt(int p1, int p2, int p3);
native fixed DialogControlGetPropertyAsFixed(int p1, int p2, int p3);
native bool DialogControlGetPropertyAsBool(int p1, int p2, int p3);
native color DialogControlGetPropertyAsColor(int p1, int p2, int p3);
native int DialogControlGetPropertyAsControl(int p1, int p2, int p3);
native void DialogControlAddItem(int p1, playergroup p2, text p3);
native void DialogControlRemoveItem(int p1, playergroup p2, int p3);
native void DialogControlRemoveAllItems(int p1, playergroup p2);
native void DialogControlSelectItem(int p1, playergroup p2, int p3);
native int DialogControlGetItemCount(int p1, int p2);
native int DialogControlGetSelectedItem(int p1, int p2);
native void DialogControlInvokeAsText(int p1, playergroup p2, string p3, text p4, text p5, text p6, text p7);
native void DialogControlInvokeAsString(int p1, playergroup p2, string p3, string p4, string p5, string p6, string p7);
native void TriggerAddEventDialogControl(trigger p1, int p2, int p3, int p4);
native int EventDialogControl();
native int EventDialogControlEventType();
native string GameTimeOfDayGet();
native void GameTimeOfDaySet(string p1);
native fixed GameTimeOfDayGetLength();
native void GameTimeOfDaySetLength(fixed p1);
native void GameTimeOfDayPause(bool p1);
native bool GameTimeOfDayIsPaused();
native int CreepAdjacent(point p1);
native bool CreepIsPresent(point p1);
native void CreepModify(point p1, fixed p2, bool p3, bool p4);
native void CreepSetSpeed(int p1, fixed p2);
native void PathingModify(region p1, int p2, bool p3);
native void PathingUpdate();
native void PathingReset();
native int PowerLevel(int p1, point p2, string p3);
native bool PowerIsProvidedBy(int p1, point p2, string p3, unit p4, int p5);
native int CliffLevel(point p1);
native fixed WorldHeight(int p1, point p2);
native void GameSetLighting(string p1, fixed p2);
native void GameSetToDLighting(string p1);
native void SelectMainShadowLight(string p1);
native void GameSetBackground(int p1, string p2, fixed p3);
native void GameDestroyEffects(point p1, fixed p2, int p3, string p4);
native void TerrainShowRegion(region p1, bool p2);
native void WaterSetState(string p1, fixed p2, int p3);
native void FogSetEnabled(bool p1);
native void FogSetDensity(fixed p1);
native void FogSetColor(color p1);
native void FogSetFallOff(fixed p1);
native void FogSetStartHeight(fixed p1);
native void EnvironmentShow(int p1, bool p2);
native bool ConsoleCommand(string p1, bool p2, bool p3);
native bool GameIsDebugOptionSet(string p1, int p2);
native void GameSaveCreate(text p1, text p2, string p3, bool p4);
native text GameMapName();
native text GameMapDescription();
native bool GameMapIsBlizzard();
native fixed GameGetSpeed();
native void GameSetSpeedValue(int p1);
native int GameGetSpeedValue();
native void GameSetSpeedValueMinimum(int p1);
native int GameGetSpeedValueMinimum();
native void GameSetSpeedLocked(bool p1);
native bool GameIsSpeedLocked();
native string GameAttributeGameValue(string p1);
native string GameAttributePlayerValue(string p1, int p2);
native void GameSetSeedLocked(bool p1);
native bool GameIsSeedLocked();
native void GameSetAbsoluteTimeRemaining(fixed p1);
native fixed GameGetAbsoluteTimeRemaining();
native void GameSetAbsoluteTimeRemainingPaused(bool p1);
native bool GameGetAbsoluteTimeRemainingPaused();
native void GamePauseAllCharges(bool p1);
native void GamePauseAllCooldowns(bool p1);
native void GameAddChargeRegen(string p1, fixed p2);
native fixed GameGetChargeRegen(string p1);
native void GameAddChargeUsed(string p1, fixed p2);
native fixed GameGetChargeUsed(string p1);
native void GameAddCooldown(string p1, fixed p2);
native fixed GameGetCooldown(string p1);
native bool GameIsTestMap(bool p1);
native void GameSetNextMap(string p1);
native void SetNextMissionDifficulty(playergroup p1, int p2);
native bool GameIsTransitionMap();
native void GameSetTransitionMap(string p1);
native string GameTerrainSet();
native void GameWaitForResourcesToComplete();
native void GameOver(int p1, int p2, bool p3, bool p4);
native void RestartGame(playergroup p1);
native void GameCheatAllow(int p1, bool p2);
native bool GameCheatsEnabled(int p1);
native void TriggerAddEventMapInit(trigger p1);
native void TriggerAddEventSaveGame(trigger p1);
native void TriggerAddEventSaveGameDone(trigger p1);
native void TriggerAddEventCheatUsed(trigger p1, int p2, int p3);
native void TriggerAddEventChatMessage(trigger p1, int p2, string p3, bool p4);
native string EventChatMessage(bool p1);
native int EventCheatUsed();
native void HelpPanelAddTip(playergroup p1, text p2, text p3, text p4, string p5);
native void HelpPanelAddHint(playergroup p1, text p2, text p3, string p4);
native void HelpPanelAddTutorial(playergroup p1, text p2, text p3, string p4, string p5, bool p6);
native void HelpPanelDisplayPage(playergroup p1, int p2);
native void HelpPanelEnableTechTreeButton(playergroup p1, bool p2);
native void HelpPanelEnableTechGlossaryButton(playergroup p1, bool p2);
native void HelpPanelShowTechTreeRace(playergroup p1, string p2, bool p3);
native void TipAlertPanelClear(playergroup p1);
native void IntLoopBegin(int p1, int p2);
native void IntLoopStep();
native bool IntLoopDone();
native int IntLoopCurrent();
native void IntLoopEnd();
native void PlayerGroupLoopBegin(playergroup p1);
native void PlayerGroupLoopStep();
native bool PlayerGroupLoopDone();
native int PlayerGroupLoopCurrent();
native void PlayerGroupLoopEnd();
native void UnitGroupLoopBegin(unitgroup p1);
native void UnitGroupLoopStep();
native bool UnitGroupLoopDone();
native unit UnitGroupLoopCurrent();
native void UnitGroupLoopEnd();
native fixed SquareRoot(fixed p1);
native fixed Pow(fixed p1, fixed p2);
native fixed ModF(fixed p1, fixed p2);
native fixed MinF(fixed p1, fixed p2);
native fixed MaxF(fixed p1, fixed p2);
native fixed AbsF(fixed p1);
native int ModI(int p1, int p2);
native int MinI(int p1, int p2);
native int MaxI(int p1, int p2);
native int AbsI(int p1);
native fixed Sin(fixed p1);
native fixed Cos(fixed p1);
native fixed Tan(fixed p1);
native fixed ASin(fixed p1);
native fixed ACos(fixed p1);
native fixed ATan(fixed p1);
native fixed ATan2(fixed p1, fixed p2);
native int RandomInt(int p1, int p2);
native fixed RandomFixed(fixed p1, fixed p2);
native marker Marker(string p1);
native marker MarkerCastingPlayer(string p1, int p2);
native marker MarkerCastingUnit(string p1, unit p2);
native void MarkerSetCastingPlayer(marker p1, int p2);
native int MarkerGetCastingPlayer(marker p1);
native void MarkerSetCastingUnit(marker p1, unit p2);
native unit MarkerGetCastingUnit(marker p1);
native void MarkerSetMatchFlag(marker p1, int p2, bool p3);
native bool MarkerGetMatchFlag(marker p1, int p2);
native void MarkerSetMismatchFlag(marker p1, int p2, bool p3);
native bool MarkerGetMismatchFlag(marker p1, int p2);
native void MeleeInitResourcesForPlayer(int p1, string p2);
native void MeleeInitResources();
native void MeleeInitUnitsForPlayer(int p1, string p2, point p3);
native void MeleeInitUnits();
native void MeleeInitAI();
native void MeleeSetOption(int p1, int p2, bool p3);
native bool MeleeGetOption(int p1, int p2);
native void MeleeInitOptions();
native int MercenaryCreate(playergroup p1, int p2);
native int MercenaryLastCreated();
native void MercenaryDestroy(int p1);
native void MercenarySetPlayerGroup(int p1, playergroup p2);
native void MercenarySetState(int p1, int p2);
native void MercenarySetCost(int p1, int p2);
native void MercenarySetTitleText(int p1, text p2);
native void MercenarySetDescriptionText(int p1, text p2);
native void MercenarySetCostText(int p1, text p2);
native void MercenarySetUnitText(int p1, text p2);
native void MercenarySetAvailabilityText(int p1, text p2);
native void MercenarySetSpecialText(int p1, text p2);
native void MercenarySetTooltipText(int p1, text p2);
native void MercenarySetModelLink(int p1, string p2);
native void MercenarySetScenePath(int p1, string p2);
native void MercenarySetImageFilePath(int p1, string p2);
native void MercenarySetRecentlyPurchased(int p1, bool p2);
native void MercenaryPurchase(int p1);
native bool MercenaryIsRecentlyPurchased(int p1);
native void MercenarySetSelected(playergroup p1, int p2);
native int MercenaryGetSelected(int p1);
native void MercenaryPanelSetCloseButtonEnabled(playergroup p1, bool p2);
native void MercenaryPanelSetDismissButtonEnabled(playergroup p1, bool p2);
native void TriggerAddEventMercenaryPanelExit(trigger p1, int p2);
native void TriggerAddEventMercenaryPanelPurchase(trigger p1, int p2);
native void TriggerAddEventMercenaryPanelSelectionChanged(trigger p1, int p2, int p3);
native void MinimapPing(playergroup p1, point p2, fixed p3, color p4);
native void PerfTestStart(text p1);
native void PerfTestStop();
native void PerfTestGetFPS();
native void UnitStatsStart(text p1, text p2, text p3);
native void UnitStatsStop();
native void EngineReset();
native void MoviePlayAfterGame(playergroup p1, string p2);
native void MovieStartRecording(string p1);
native void MovieStopRecording();
native void MovieAddSubTitle(string p1, int p2, int p3);
native void MovieAddSubTitleText(text p1, int p2, int p3);
native void MovieAddTriggerFunction(string p1, int p2);
native void TriggerAddEventMovieStarted(trigger p1, int p2);
native void TriggerAddEventMovieFinished(trigger p1, int p2);
native void TriggerAddEventMovieFunction(trigger p1, int p2, string p3);
native int ObjectiveCreate(text p1, text p2, int p3, bool p4);
native int ObjectiveCreate3(text p1, text p2, int p3, bool p4, bool p5);
native int ObjectiveLastCreated();
native void ObjectiveDestroy(int p1);
native void ObjectiveDestroyAll(playergroup p1);
native void ObjectiveShow(int p1, playergroup p2, bool p3);
native bool ObjectiveVisible(int p1, int p2);
native void ObjectiveSetName(int p1, text p2);
native text ObjectiveGetName(int p1);
native void ObjectiveSetDescription(int p1, text p2);
native text ObjectiveGetDescription(int p1);
native void ObjectiveSetState(int p1, int p2);
native int ObjectiveGetState(int p1);
native void ObjectiveSetPlayerGroup(int p1, playergroup p2);
native playergroup ObjectiveGetPlayerGroup(int p1);
native void ObjectiveSetPrimary(int p1, bool p2);
native bool ObjectiveGetPrimary(int p1);
native abilcmd AbilityCommand(string p1, int p2);
native string AbilityCommandGetAbility(abilcmd p1);
native int AbilityCommandGetCommand(abilcmd p1);
native int AbilityCommandGetAction(abilcmd p1);
native order Order(abilcmd p1);
native order OrderTargetingPoint(abilcmd p1, point p2);
native order OrderTargetingRelativePoint(abilcmd p1, point p2);
native order OrderTargetingUnit(abilcmd p1, unit p2);
native order OrderTargetingUnitGroup(abilcmd p1, unitgroup p2);
native order OrderTargetingItem(abilcmd p1, unit p2);
native order OrderSetAutoCast(abilcmd p1, bool p2);
native void OrderSetAbilityCommand(order p1, abilcmd p2);
native abilcmd OrderGetAbilityCommand(order p1);
native void OrderSetPlayer(order p1, int p2);
native int OrderGetPlayer(order p1);
native int OrderGetTargetType(order p1);
native bool OrderSetTargetPlacement(order p1, point p2, unit p3, string p4);
native void OrderSetTargetPoint(order p1, point p2);
native point OrderGetTargetPoint(order p1);
native point OrderGetTargetPosition(order p1);
native void OrderSetTargetUnit(order p1, unit p2);
native unit OrderGetTargetUnit(order p1);
native void OrderSetTargetPassenger(order p1, unit p2);
native void OrderSetTargetItem(order p1, unit p2);
native unit OrderGetTargetItem(order p1);
native void OrderSetFlag(order p1, int p2, bool p3);
native bool OrderGetFlag(order p1, int p2);
native int PingCreate(playergroup p1, string p2, point p3, color p4, fixed p5);
native int PingLastCreated();
native void PingDestroy(int p1);
native void PingDestroyAll();
native void PingSetPlayerGroup(int p1, playergroup p2);
native playergroup PingGetPlayerGroup(int p1);
native void PingSetModel(int p1, string p2);
native void PingSetPosition(int p1, point p2);
native point PingGetPosition(int p1);
native void PingSetScale(int p1, fixed p2);
native fixed PingGetScale(int p1);
native void PingSetRotation(int p1, fixed p2);
native fixed PingGetRotation(int p1);
native void PingSetColor(int p1, color p2);
native color PingGetColor(int p1);
native void PingSetDuration(int p1, fixed p2);
native fixed PingGetDuration(int p1);
native void PingSetUnit(int p1, unit p2);
native unit PingGetUnit(int p1);
native void PingSetTooltip(int p1, text p2);
native text PingGetTooltip(int p1);
native void PingSetVisible(int p1, bool p2);
native bool PingIsVisible(int p1);
native int PlanetCreate(playergroup p1, int p2);
native int PlanetLastCreated();
native void PlanetDestroy(int p1);
native void PlanetDestroyAll(playergroup p1);
native void PlanetSetSelected(playergroup p1, int p2);
native int PlanetGetSelected(int p1);
native void PlanetClearSelected(playergroup p1);
native void PlanetSetPlayerGroup(int p1, playergroup p2);
native void PlanetSetState(int p1, int p2);
native void PlanetSetPlanetName(int p1, text p2);
native void PlanetSetDescriptionText(int p1, text p2);
native void PlanetSetTooltipText(int p1, text p2);
native void PlanetSetContactTooltipText(int p1, text p2);
native void PlanetSetTechnologyTooltipText(int p1, text p2);
native void PlanetSetMissionTitle(int p1, text p2);
native void PlanetSetMissionName(int p1, text p2);
native void PlanetSetPrimaryObjectiveTitle(int p1, text p2);
native void PlanetSetPrimaryObjectiveText(int p1, text p2);
native void PlanetSetSecondaryObjectiveTitle(int p1, text p2);
native void PlanetSetSecondaryObjectiveText(int p1, text p2);
native void PlanetSetRewardTitle(int p1, text p2);
native void PlanetSetRewardText(int p1, text p2);
native void PlanetSetResearchTitle(int p1, text p2);
native void PlanetSetResearchText(int p1, text p2);
native void PlanetSetBonusTitle(int p1, text p2);
native void PlanetSetBonusText(int p1, text p2);
native void PlanetSetPlanetText(int p1, text p2);
native void PlanetSetTechnologyTitle(int p1, text p2);
native void PlanetSetTechnologyName(int p1, text p2);
native void PlanetSetTechnologyText(int p1, text p2);
native void PlanetSetContactTitle(int p1, text p2);
native void PlanetSetContactName(int p1, text p2);
native void PlanetSetContactModelLink(int p1, string p2);
native void PlanetSetBackgroundModelLink(int p1, string p2);
native void PlanetSetPlanetModelLink(int p1, string p2);
native void PlanetSetTechnologyIconFilePath(int p1, string p2);
native void PlanetSetTechnologyUnitLink(int p1, string p2);
native void PlanetPanelSetContactButtonState(playergroup p1, int p2);
native int PlanetPanelGetContactButtonState(int p1);
native void PlanetPanelSetBackButtonEnabled(playergroup p1, bool p2);
native void PlanetPanelSetDismissButtonEnabled(playergroup p1, bool p2);
native void PlanetPanelSetBackButtonText(playergroup p1, text p2);
native void PlanetPanelSetBackButtonShortcut(playergroup p1, text p2);
native void PlanetPanelSetBackButtonTooltip(playergroup p1, text p2);
native void PlanetPanelSetBackgroundImage(playergroup p1, string p2);
native void TriggerAddEventPlanetMissionLaunched(trigger p1, int p2);
native void TriggerAddEventPlanetMissionSelected(trigger p1, int p2, int p3);
native void TriggerAddEventPlanetPanelCanceled(trigger p1, int p2);
native void TriggerAddEventPlanetPanelReplayPressed(trigger p1, int p2);
native void TriggerAddEventPlanetPanelBirthComplete(trigger p1, int p2);
native void TriggerAddEventPlanetPanelDeathComplete(trigger p1, int p2);
native int EventPlanetPanelMissionSelected();
native int EventPlanetPanelDifficultySelected();
native void VictoryPanelSetVictoryText(text p1);
native void VictoryPanelSetMissionTitle(text p1);
native void VictoryPanelSetMissionText(text p1);
native void VictoryPanelSetMissionTimeTitle(text p1);
native void VictoryPanelSetMissionTimeText(text p1);
native void VictoryPanelSetRewardTitle(text p1);
native void VictoryPanelSetRewardText(text p1);
native void VictoryPanelSetRewardCredits(int p1);
native void VictoryPanelSetAchievementsTitle(text p1);
native void VictoryPanelSetStatisticsTitle(text p1);
native void VictoryPanelSetCustomStatisticText(text p1);
native void VictoryPanelSetCustomStatisticValue(text p1);
native void VictoryPanelSetPlanetModelLink(string p1);
native void VictoryPanelSetBackgroundFilePath(string p1);
native void VictoryPanelSetSummaryBackgroundFilePath(string p1);
native void VictoryPanelAddCustomStatisticLine(text p1, text p2);
native void VictoryPanelClearCustomStatisticTable();
native void VictoryPanelAddTrackedStatistic(string p1);
native void VictoryPanelAddAchievement(string p1);
native void TriggerAddEventVictoryPanelExit(trigger p1, int p2);
native void TriggerAddEventVictoryPanelPlayMissionAgain(trigger p1, int p2);
native int EventVictoryPanelDifficultySelected();
native void PlayerModifyPropertyInt(int p1, int p2, int p3, int p4);
native void PlayerModifyPropertyFixed(int p1, int p2, int p3, fixed p4);
native int PlayerGetPropertyInt(int p1, int p2);
native fixed PlayerGetPropertyFixed(int p1, int p2);
native int PlayerStatus(int p1);
native int PlayerType(int p1);
native text PlayerName(int p1);
native string PlayerRace(int p1);
native int PlayerDifficulty(int p1);
native void PlayerSetDifficulty(int p1, int p2);
native point PlayerStartLocation(int p1);
native void PlayerSetColorIndex(int p1, int p2, bool p3);
native int PlayerGetColorIndex(int p1, bool p2);
native text PlayerColorName(int p1);
native void PlayerSetAlliance(int p1, int p2, int p3, bool p4);
native bool PlayerGetAlliance(int p1, int p2, int p3);
native void PlayerSetState(int p1, int p2, bool p3);
native bool PlayerGetState(int p1, int p2);
native void PlayerBeaconClearTarget(int p1, int p2);
native bool PlayerBeaconIsAutoCast(int p1, int p2);
native bool PlayerBeaconIsFromUser(int p1, int p2);
native bool PlayerBeaconIsSet(int p1, int p2);
native point PlayerBeaconGetTargetPoint(int p1, int p2);
native unit PlayerBeaconGetTargetUnit(int p1, int p2);
native void PlayerBeaconSetAutoCast(int p1, int p2, bool p3);
native void PlayerBeaconSetTargetPoint(int p1, int p2, point p3, bool p4);
native void PlayerBeaconSetTargetUnit(int p1, int p2, unit p3, bool p4);
native void PlayerBeaconAlert(int p1, int p2, string p3, text p4);
native void PlayerPauseAllCharges(int p1, bool p2);
native void PlayerPauseAllCooldowns(int p1, bool p2);
native void PlayerAddChargeRegen(int p1, string p2, fixed p3);
native fixed PlayerGetChargeRegen(int p1, string p2);
native void PlayerAddChargeUsed(int p1, string p2, fixed p3);
native fixed PlayerGetChargeUsed(int p1, string p2);
native void PlayerAddCooldown(int p1, string p2, fixed p3);
native fixed PlayerGetCooldown(int p1, string p2);
native void PlayerCreateEffectPoint(int p1, string p2, point p3);
native void PlayerCreateEffectUnit(int p1, string p2, unit p3);
native int PlayerValidateEffectPoint(int p1, string p2, point p3);
native int PlayerValidateEffectUnit(int p1, string p2, unit p3);
native void PlayerScoreValueEnableAll(int p1, bool p2);
native void PlayerScoreValueEnable(int p1, string p2, bool p3);
native fixed PlayerScoreValueGetAsFixed(int p1, string p2);
native int PlayerScoreValueGetAsInt(int p1, string p2);
native void PlayerScoreValueSetFromFixed(int p1, string p2, fixed p3);
native void PlayerScoreValueSetFromInt(int p1, string p2, int p3);
native void TriggerAddEventPlayerAllianceChange(trigger p1, int p2);
native void TriggerAddEventPlayerLeft(trigger p1, int p2, int p3);
native void TriggerAddEventPlayerPropChange(trigger p1, int p2, int p3);
native void TriggerAddEventPlayerAIWave(trigger p1, int p2);
native int EventPlayer();
native int EventPlayerProperty();
native text DifficultyName(int p1);
native text DifficultyNameCampaign(int p1);
native bool DifficultyEnabled(int p1);
native int DifficultyAPM(int p1);
native playergroup PlayerGroupEmpty();
native playergroup PlayerGroupCopy(playergroup p1);
native playergroup PlayerGroupAll();
native playergroup PlayerGroupActive();
native playergroup PlayerGroupSingle(int p1);
native playergroup PlayerGroupAlliance(int p1, int p2);
native void PlayerGroupClear(playergroup p1);
native void PlayerGroupAdd(playergroup p1, int p2);
native void PlayerGroupRemove(playergroup p1, int p2);
native int PlayerGroupCount(playergroup p1);
native int PlayerGroupPlayer(playergroup p1, int p2);
native bool PlayerGroupHasPlayer(playergroup p1, int p2);
native point Point(fixed p1, fixed p2);
native point PointWithOffset(point p1, fixed p2, fixed p3);
native point PointWithOffsetPolar(point p1, fixed p2, fixed p3);
native point PointFromId(int p1);
native fixed PointGetX(point p1);
native fixed PointGetY(point p1);
native void PointSet(point p1, point p2);
native fixed PointGetFacing(point p1);
native void PointSetFacing(point p1, fixed p2);
native fixed PointGetHeight(point p1);
native void PointSetHeight(point p1, fixed p2);
native bool PointsInRange(point p1, point p2, fixed p3);
native fixed AngleBetweenPoints(point p1, point p2);
native fixed DistanceBetweenPoints(point p1, point p2);
native int PointPathingCost(point p1, point p2);
native fixed PointPathingCliffLevel(point p1);
native bool PointPathingPassable(point p1);
native bool PointPathingIsConnected(point p1, point p2);
native point PointReflect(point p1, point p2, fixed p3);
native int PortraitCreate(int p1, int p2, int p3, int p4, int p5, string p6, string p7, string p8, bool p9, bool p10);
native int PortraitLastCreated();
native void PortraitDestroy(int p1);
native void PortraitDestroyAll();
native void PortraitWaitForLoad(int p1);
native int PortraitGetGame();
native int PortraitGetPlanetPanel();
native void PortraitSetModel(int p1, string p2, bool p3);
native void PortraitSetModelAnim(int p1, string p2, string p3, int p4, bool p5);
native void PortraitSetAnim(int p1, string p2);
native void PortraitSetCamera(int p1, string p2);
native void PortraitSetSize(int p1, int p2, int p3);
native void PortraitSetPosition(int p1, int p2, int p3, int p4);
native void PortraitSetFullscreen(int p1, bool p2);
native void PortraitSetOffscreen(int p1, bool p2);
native void PortraitSetVisible(int p1, playergroup p2, bool p3, bool p4);
native void PortraitSetBorderVisible(int p1, bool p2);
native void PortraitSetBorderTexture(int p1, string p2);
native void PortraitSetBackgroundVisible(int p1, bool p2);
native void PortraitSetChannel(int p1, int p2);
native void PortraitSetRenderType(int p1, int p2);
native void PortraitSetChannelPortrait(int p1, int p2, int p3);
native void PortraitUseTransition(int p1, bool p2);
native void PortraitSetMuted(int p1, bool p2);
native void PortraitForceTransition(int p1, bool p2, bool p3);
native void PortraitSetPaused(int p1, bool p2);
native void PortraitSetTintColor(int p1, color p2);
native void PortraitSetLight(int p1, string p2);
native void PortraitSetTransitionModel(int p1, string p2);
native bool PortraitVisible(int p1, int p2);
native void PreloadAsset(string p1, bool p2);
native void PreloadImage(string p1, bool p2);
native void PreloadModel(string p1, bool p2);
native void PreloadMovie(string p1, bool p2);
native void PreloadObject(int p1, string p2, bool p3);
native void PreloadScene(string p1, bool p2);
native void PreloadScript(string p1, bool p2);
native void PreloadSound(string p1, bool p2);
native int PurchaseCategoryCreate(playergroup p1, int p2);
native int PurchaseCategoryLastCreated();
native void PurchaseCategoryDestroy(int p1);
native void PurchaseCategoryDestroyAll(playergroup p1);
native void PurchaseCategorySetPlayerGroup(int p1, playergroup p2);
native void PurchaseCategorySetNameText(int p1, text p2);
native void PurchaseCategorySetState(int p1, int p2);
native void PurchaseCategorySetSlot(int p1, int p2);
native void PurchaseSetSelectedPurchaseCategory(playergroup p1, int p2);
native int PurchaseGetSelectedPurchaseCategory(int p1);
native int PurchaseGroupCreate(playergroup p1, int p2, int p3);
native int PurchaseGroupLastCreated();
native void PurchaseGroupDestroy(int p1);
native void PurchaseGroupDestroyAll(playergroup p1);
native void PurchaseGroupSetPlayerGroup(int p1, playergroup p2);
native void PurchaseGroupSetNameText(int p1, text p2);
native void PurchaseGroupSetTooltipText(int p1, text p2);
native void PurchaseGroupSetIconFilePath(int p1, string p2);
native void PurchaseGroupSetState(int p1, int p2);
native void PurchaseGroupSetSlot(int p1, int p2);
native void PurchaseGroupSetUnitLink(int p1, string p2);
native int PurchaseItemCreate(playergroup p1, int p2, int p3);
native int PurchaseItemLastCreated();
native void PurchaseItemDestroy(int p1);
native void PurchaseItemDestroyAll(playergroup p1);
native void PurchaseItemSetPlayerGroup(int p1, playergroup p2);
native void PurchaseItemSetNameText(int p1, text p2);
native void PurchaseItemSetTooltipText(int p1, text p2);
native void PurchaseItemSetDescriptionText(int p1, text p2);
native void PurchaseItemSetIconFilePath(int p1, string p2);
native void PurchaseItemSetMovieFilePath(int p1, string p2);
native void PurchaseItemSetCost(int p1, int p2);
native void PurchaseItemSetState(int p1, int p2);
native void PurchaseItemSetRecentlyPurchased(int p1, bool p2);
native void PurchaseItemSetSlot(int p1, int p2);
native void PurchaseItemPurchase(int p1);
native bool PurchaseItemIsRecentlyPurchased(int p1);
native void PurchaseSetSelectedPurchaseItem(playergroup p1, int p2);
native int PurchaseGetSelectedPurchaseItem(int p1);
native void TriggerAddEventPurchaseMade(trigger p1, int p2, int p3);
native void TriggerAddEventPurchaseExit(trigger p1, int p2);
native void TriggerAddEventSelectedPurchaseItemChanged(trigger p1, int p2, int p3);
native void TriggerAddEventSelectedPurchaseCategoryChanged(trigger p1, int p2, int p3);
native int EventPurchaseMade();
native region RegionEmpty();
native region RegionEntireMap();
native region RegionPlayableMap();
native void RegionPlayableMapSet(region p1);
native region RegionRect(fixed p1, fixed p2, fixed p3, fixed p4);
native region RegionCircle(point p1, fixed p2);
native region RegionFromId(int p1);
native void RegionAddRect(region p1, bool p2, fixed p3, fixed p4, fixed p5, fixed p6);
native void RegionAddCircle(region p1, bool p2, point p3, fixed p4);
native void RegionAddRegion(region p1, region p2);
native void RegionSetOffset(region p1, point p2);
native point RegionGetOffset(region p1);
native bool RegionContainsPoint(region p1, point p2);
native point RegionRandomPoint(region p1);
native point RegionGetBoundsMin(region p1);
native point RegionGetBoundsMax(region p1);
native point RegionGetCenter(region p1);
native void RegionSetCenter(region p1, point p2);
native void RegionAttachToUnit(region p1, unit p2, point p3);
native unit RegionGetAttachUnit(region p1);
native int ResearchCategoryCreate(playergroup p1, int p2);
native int ResearchCategoryLastCreated();
native void ResearchCategoryDestroy(int p1);
native void ResearchCategoryDestroyAll(playergroup p1);
native void ResearchCategorySetPlayerGroup(int p1, playergroup p2);
native void ResearchCategorySetSlot(int p1, int p2);
native void ResearchCategorySetNameText(int p1, text p2);
native void ResearchCategorySetCurrentLevel(int p1, int p2);
native void ResearchCategorySetLastLevel(int p1, int p2);
native int ResearchTierCreate(playergroup p1, int p2, int p3);
native int ResearchTierLastCreated();
native void ResearchTierDestroy(int p1);
native void ResearchTierDestroyAll(playergroup p1);
native void ResearchTierSetPlayerGroup(int p1, playergroup p2);
native void ResearchTierSetSlot(int p1, int p2);
native void ResearchTierSetRequiredLevel(int p1, int p2);
native void ResearchTierSetMaxPurchasesAllowed(int p1, int p2);
native int ResearchItemCreate(playergroup p1, int p2, int p3);
native int ResearchItemLastCreated();
native void ResearchItemDestroy(int p1);
native void ResearchItemDestroyAll(playergroup p1);
native void ResearchItemSetPlayerGroup(int p1, playergroup p2);
native void ResearchItemSetSlot(int p1, int p2);
native void ResearchItemSetState(int p1, int p2);
native void ResearchItemSetNameText(int p1, text p2);
native void ResearchItemSetDescriptionText(int p1, text p2);
native void ResearchItemSetTooltipText(int p1, text p2);
native void ResearchItemSetConfirmationText(int p1, text p2);
native void ResearchItemSetIconFilePath(int p1, string p2);
native void ResearchItemSetMovieFilePath(int p1, string p2);
native void ResearchItemSetRecentlyPurchased(int p1, bool p2);
native bool ResearchItemIsRecentlyPurchased(int p1);
native void ResearchItemPurchase(int p1);
native void ResearchItemSetSelected(playergroup p1, int p2);
native int ResearchItemGetSelected(int p1);
native void TriggerAddEventResearchPanelExit(trigger p1, int p2);
native void TriggerAddEventResearchPanelPurchase(trigger p1, int p2);
native void TriggerAddEventResearchPanelSelectionChanged(trigger p1, int p2, int p3);
native soundlink SoundLink(string p1, int p2);
native string SoundLinkId(soundlink p1);
native int SoundLinkAsset(soundlink p1);
native void SoundPlay(soundlink p1, playergroup p2, fixed p3, fixed p4);
native void SoundPlayAtPoint(soundlink p1, playergroup p2, point p3, fixed p4, fixed p5, fixed p6);
native void SoundPlayOnUnit(soundlink p1, playergroup p2, unit p3, fixed p4, fixed p5, fixed p6);
native void SoundPlayScene(soundlink p1, playergroup p2, unitgroup p3, string p4);
native void SoundPlaySceneFile(soundlink p1, playergroup p2, string p3, string p4);
native sound SoundLastPlayed();
native void SoundStop(sound p1, bool p2);
native void SoundStopAllModelSounds();
native void SoundStopAllTriggerSounds(bool p1);
native void SoundSetVolume(sound p1, fixed p2);
native void SoundSetPosition(sound p1, point p2, fixed p3);
native void SoundSetOffset(sound p1, fixed p2, int p3);
native void SoundWait(sound p1, fixed p2, int p3);
native void SoundAttachUnit(sound p1, unit p2, fixed p3);
native void SoundLengthQuery(soundlink p1);
native void SoundLengthQueryWait();
native fixed SoundLengthSync(soundlink p1);
native void SoundChannelSetVolume(playergroup p1, int p2, fixed p3, fixed p4);
native void SoundChannelMute(playergroup p1, int p2, bool p3);
native void SoundChannelPause(playergroup p1, int p2, bool p3);
native void SoundChannelStop(playergroup p1, int p2);
native void SoundSetReverb(string p1, fixed p2, bool p3, bool p4);
native void SoundSetFactors(fixed p1, fixed p2, fixed p3);
native text SoundSubtitleText(soundlink p1);
native void SoundtrackDefault(playergroup p1, int p2, string p3, int p4, int p5);
native void SoundtrackPlay(playergroup p1, int p2, string p3, int p4, int p5, bool p6);
native void SoundtrackPause(playergroup p1, int p2, bool p3, bool p4);
native void SoundtrackSetContinuous(playergroup p1, int p2, bool p3);
native void SoundtrackSetDelay(playergroup p1, int p2, fixed p3);
native void SoundtrackSetShuffle(playergroup p1, int p2, bool p3, bool p4);
native void SoundtrackStop(playergroup p1, int p2, bool p3);
native void SoundtrackWait(string p1);
native void StoryMode(playergroup p1, bool p2);
native void StorySetChange();
native void CampaignMode(playergroup p1, bool p2);
native int StringLength(string p1);
native string StringCase(string p1, bool p2);
native text TextCase(text p1, bool p2);
native string StringSub(string p1, int p2, int p3);
native bool StringEqual(string p1, string p2, bool p3);
native int StringFind(string p1, string p2, bool p3);
native bool StringContains(string p1, string p2, int p3, bool p4);
native string StringWord(string p1, int p2);
native string StringReplace(string p1, string p2, int p3, int p4);
native string StringReplaceWord(string p1, string p2, string p3, int p4, bool p5);
native text TextReplaceWord(text p1, text p2, text p3, int p4, bool p5);
native text StringExternal(string p1);
native text StringToText(string p1);
native text TextWithColor(text p1, color p2);
native text TextTimeFormat(text p1, int p2);
native void TechTreeAbilityAllow(int p1, abilcmd p2, bool p3);
native int TechTreeAbilityCount(int p1, string p2, int p3);
native bool TechTreeAbilityIsAllowed(int p1, abilcmd p2);
native void TechTreeBehaviorAllow(int p1, string p2, bool p3);
native int TechTreeBehaviorCount(int p1, string p2, int p3);
native bool TechTreeBehaviorIsAllowed(int p1, string p2);
native abilcmd TechTreeBehaviorProducedAbilCmd(string p1, int p2);
native int TechTreeBehaviorProducedAbilCmdCount(string p1);
native void TechTreeRequirementsEnable(int p1, bool p2);
native bool TechTreeRequirementsEnabled(int p1);
native void TechTreeRestrictionsEnable(int p1, bool p2);
native bool TechTreeRestrictionsEnabled(int p1);
native void TechTreeUnitAllow(int p1, string p2, bool p3);
native int TechTreeUnitCount(int p1, string p2, int p3);
native int TechTreeUnitAliasCount(int p1, string p2, int p3);
native int TechTreeUnitCountEx(int p1, string p2, string p3, int p4);
native bool TechTreeUnitIsAllowed(int p1, string p2);
native void TechTreeUnitHelp(int p1, string p2, bool p3);
native void TechTreeUnitHelpDefault(int p1, bool p2);
native abilcmd TechTreeUnitProducedAbilCmd(string p1, int p2);
native int TechTreeUnitProducedAbilCmdCount(string p1);
native string TechTreeUnitProducesUnit(string p1, int p2);
native int TechTreeUnitProducesUnitCount(string p1);
native string TechTreeUnitProducesUpgrade(string p1, int p2);
native int TechTreeUnitProducesUpgradeCount(string p1);
native void TechTreeUpgradeAddLevel(int p1, string p2, int p3);
native void TechTreeUpgradeAllow(int p1, string p2, bool p3);
native int TechTreeUpgradeCount(int p1, string p2, int p3);
native bool TechTreeUpgradeIsAllowed(int p1, string p2);
native abilcmd TechTreeUpgradeProducedAbilCmd(string p1, int p2);
native int TechTreeUpgradeProducedAbilCmdCount(string p1);
native int TextTagCreate(text p1, int p2, point p3, fixed p4, bool p5, bool p6, playergroup p7);
native int TextTagLastCreated();
native void TextTagDestroy(int p1);
native void TextTagSetText(int p1, text p2);
native void TextTagSetTextShadow(int p1, bool p2);
native void TextTagSetFontSize(int p1, int p2);
native void TextTagSetPosition(int p1, point p2, fixed p3);
native void TextTagAttachToUnit(int p1, unit p2, fixed p3);
native void TextTagAttachToUnitPoint(int p1, unit p2, string p3, int p4, int p5);
native void TextTagSetVelocity(int p1, fixed p2, fixed p3);
native void TextTagSetAlignment(int p1, int p2, int p3);
native void TextTagSetTextAlignment(int p1, int p2, int p3);
native void TextTagSetMaxSize(int p1, fixed p2, fixed p3);
native void TextTagShowBackground(int p1, bool p2);
native void TextTagSetBackgroundImage(int p1, string p2, bool p3);
native void TextTagSetBackgroundBorderSize(int p1, fixed p2, fixed p3);
native void TextTagSetBackgroundOffset(int p1, fixed p2, fixed p3);
native void TextTagSetEdgeImage(int p1, int p2, string p3, int p4, int p5);
native void TextTagShow(int p1, playergroup p2, bool p3);
native bool TextTagVisible(int p1, int p2);
native void TextTagPause(int p1, bool p2);
native void TextTagFogofWar(int p1, bool p2);
native void TextTagSetColor(int p1, int p2, color p3);
native void TextTagSetFadedTransparency(int p1, int p2, fixed p3);
native void TextTagSetTime(int p1, int p2, fixed p3);
native void Wait(fixed p1, int p2);
native void AITimePause(bool p1);
native bool AITimeIsPaused();
native timer TimerCreate();
native void TimerStart(timer p1, fixed p2, bool p3, int p4);
native void TimerRestart(timer p1);
native timer TimerLastStarted();
native void TimerPause(timer p1, bool p2);
native bool TimerIsPaused(timer p1);
native fixed TimerGetElapsed(timer p1);
native fixed TimerGetRemaining(timer p1);
native fixed TimerGetDuration(timer p1);
native void TriggerAddEventTimer(trigger p1, timer p2);
native void TriggerAddEventTimeElapsed(trigger p1, fixed p2, int p3);
native void TriggerAddEventTimePeriodic(trigger p1, fixed p2, int p3);
native timer EventTimer();
native int TimerWindowCreate(timer p1, text p2, bool p3, bool p4);
native int TimerWindowLastCreated();
native void TimerWindowDestroy(int p1);
native void TimerWindowSetPosition(int p1, int p2, int p3);
native void TimerWindowResetPosition(int p1);
native void TimerWindowShow(int p1, playergroup p2, bool p3);
native bool TimerWindowVisible(int p1, int p2);
native void TimerWindowSetTimer(int p1, timer p2);
native void TimerWindowSetTitle(int p1, text p2);
native void TimerWindowSetStyle(int p1, int p2, bool p3);
native void TimerWindowSetGapWidth(int p1, int p2);
native void TimerWindowSetFormat(int p1, text p2);
native void TimerWindowSetColor(int p1, int p2, color p3, fixed p4);
native transmissionsource TransmissionSource();
native transmissionsource TransmissionSourceFromUnit(unit p1, bool p2, bool p3, string p4);
native transmissionsource TransmissionSourceFromUnitType(string p1, bool p2);
native transmissionsource TransmissionSourceFromModel(string p1);
native transmissionsource TransmissionSourceFromMovie(string p1, bool p2);
native int TransmissionSend(playergroup p1, transmissionsource p2, int p3, string p4, soundlink p5, text p6, text p7, fixed p8, int p9, bool p10);
native int TransmissionLastSent();
native void TransmissionClear(int p1);
native void TransmissionClearAll();
native void TransmissionSetOption(int p1, bool p2);
native void TransmissionWait(int p1, fixed p2);
native trigger TriggerCreate(string p1);
native void TriggerDestroy(trigger p1);
native void TriggerEnable(trigger p1, bool p2);
native bool TriggerIsEnabled(trigger p1);
native void TriggerResetCounts(trigger p1);
native int TriggerGetEvalCount(trigger p1);
native int TriggerGetExecCount(trigger p1);
native bool TriggerEvaluate(trigger p1);
native void TriggerExecute(trigger p1, bool p2, bool p3);
native trigger TriggerGetCurrent();
native void TriggerStop(trigger p1);
native void TriggerWaitForTrigger(trigger p1, bool p2);
native void TriggerQueueEnter();
native void TriggerQueueExit();
native bool TriggerQueueIsEmpty();
native void TriggerQueuePause(bool p1);
native void TriggerQueueClear(int p1);
native void TriggerSkippableBegin(playergroup p1, int p2, trigger p3, bool p4, bool p5);
native void TriggerSkippableEnd();
native void TriggerDebugWindowOpen(bool p1);
native void TriggerDebugOutput(int p1, text p2, bool p3);
native void TriggerDebugSetTypeName(int p1, text p2);
native void TriggerDebugSetTypeColor(int p1, color p2);
native void TriggerDebugSetTypeFile(int p1, string p2);
native unitgroup UnitCreate(int p1, string p2, int p3, int p4, point p5, fixed p6);
native unit UnitLastCreated();
native unitgroup UnitLastCreatedGroup();
native unit UnitFromId(int p1);
native void UnitLoadModel(unit p1);
native void UnitUnloadModel(unit p1);
native void UnitRemove(unit p1);
native void UnitKill(unit p1);
native void UnitRevive(unit p1);
native bool UnitIsAlive(unit p1);
native bool UnitIsValid(unit p1);
native void UnitWaitUntilIdle(unit p1, bool p2);
native string UnitGetType(unit p1);
native int UnitGetOwner(unit p1);
native void UnitSetOwner(unit p1, int p2, bool p3);
native void UnitSetTeamColorIndex(unit p1, int p2);
native void UnitResetTeamColorIndex(unit p1);
native point UnitGetPosition(unit p1);
native void UnitSetPosition(unit p1, point p2, bool p3);
native fixed UnitGetHeight(unit p1);
native void UnitSetHeight(unit p1, fixed p2, fixed p3);
native fixed UnitGetFacing(unit p1);
native void UnitSetFacing(unit p1, fixed p2, fixed p3);
native point UnitGetAttachmentPoint(unit p1, string p2);
native void UnitResetSpeed(unit p1);
native void UnitSetScale(unit p1, fixed p2, fixed p3, fixed p4);
native void UnitPauseAll(bool p1);
native void UnitSetCursor(unit p1, string p2);
native void UnitSetInfoText(unit p1, text p2, text p3, text p4);
native void UnitClearInfoText(unit p1);
native void UnitForceStatusBar(unit p1, bool p2);
native void UnitSetState(unit p1, int p2, bool p3);
native bool UnitTestState(unit p1, int p2);
native void UnitSetPropertyInt(unit p1, int p2, int p3);
native void UnitSetPropertyFixed(unit p1, int p2, fixed p3);
native int UnitGetPropertyInt(unit p1, int p2, bool p3);
native fixed UnitGetPropertyFixed(unit p1, int p2, bool p3);
native void UnitSetCustomValue(unit p1, int p2, fixed p3);
native fixed UnitGetCustomValue(unit p1, int p2);
native void UnitAddChargeRegen(unit p1, string p2, fixed p3);
native fixed UnitGetChargeRegen(unit p1, string p2);
native void UnitAddChargeUsed(unit p1, string p2, fixed p3);
native fixed UnitGetChargeUsed(unit p1, string p2);
native void UnitAddCooldown(unit p1, string p2, fixed p3);
native fixed UnitGetCooldown(unit p1, string p2);
native void UnitCreateEffectPoint(unit p1, string p2, point p3);
native void UnitCreateEffectUnit(unit p1, string p2, unit p3);
native int UnitValidateEffectPoint(unit p1, string p2, point p3);
native int UnitValidateEffectUnit(unit p1, string p2, unit p3);
native void UnitSetAIOption(unit p1, int p2, bool p3);
native bool UnitGetAIOption(unit p1, int p2);
native void UnitAbilitySpend(unit p1, abilcmd p2, int p3);
native void UnitAbilityReset(unit p1, abilcmd p2, int p3);
native fixed UnitAbilityChargeInfo(unit p1, abilcmd p2, int p3);
native int UnitAbilityCount(unit p1);
native bool UnitAbilityExists(unit p1, string p2);
native void UnitAbilityEnable(unit p1, string p2, bool p3);
native void UnitAbilityShow(unit p1, string p2, bool p3);
native string UnitAbilityGet(unit p1, int p2);
native bool UnitAbilityCheck(unit p1, string p2, bool p3);
native bool UnitCheckAbilCmdState(unit p1, abilcmd p2, int p3);
native void UnitAbilityChangeLevel(unit p1, string p2, int p3);
native int UnitAbilityGetLevel(unit p1, string p2);
native int UnitAbilityMaxLevel(unit p1, string p2);
native void UnitAbilityAddChargeRegen(unit p1, string p2, string p3, fixed p4);
native fixed UnitAbilityGetChargeRegen(unit p1, string p2, string p3);
native void UnitAbilityAddChargeUsed(unit p1, string p2, string p3, fixed p4);
native fixed UnitAbilityGetChargeUsed(unit p1, string p2, string p3);
native void UnitAbilityAddCooldown(unit p1, string p2, string p3, fixed p4);
native fixed UnitAbilityGetCooldown(unit p1, string p2, string p3);
native void UnitCargoCreate(unit p1, string p2, int p3);
native unit UnitCargoLastCreated();
native unitgroup UnitCargoLastCreatedGroup();
native unit UnitCargo(unit p1, int p2);
native unitgroup UnitCargoGroup(unit p1);
native int UnitCargoValue(unit p1, int p2);
native unit UnitTransport(unit p1);
native unit UnitAgent(unit p1, int p2);
native void UnitMagazineArm(unit p1, abilcmd p2, int p3);
native int UnitMagazineCount(unit p1, string p2);
native int UnitQueueItemCount(unit p1, int p2);
native string UnitQueueItemGet(unit p1, int p2, int p3);
native fixed UnitQueueItemTime(unit p1, int p2, int p3);
native bool UnitQueueItemTypeCheck(unit p1, int p2, int p3);
native int UnitQueueGetProperty(unit p1, int p2);
native bool UnitMoverExists(unit p1, string p2);
native bool UnitTestPlane(unit p1, int p2);
native fixed UnitGetProgressComplete(unit p1, int p2);
native void UnitSetProgressComplete(unit p1, int p2, int p3);
native void UnitSetProgressStage(unit p1, int p2, int p3);
native bool UnitCheckProgressState(unit p1, int p2, int p3);
native void UnitBehaviorAdd(unit p1, string p2, unit p3, int p4);
native void UnitBehaviorAddPlayer(unit p1, string p2, int p3, int p4);
native int UnitBehaviorCountAll(unit p1);
native int UnitBehaviorCount(unit p1, string p2);
native fixed UnitBehaviorDuration(unit p1, string p2);
native void UnitBehaviorSetDuration(unit p1, string p2, fixed p3);
native bool UnitBehaviorEnabled(unit p1, string p2);
native string UnitBehaviorGet(unit p1, int p2);
native bool UnitHasBehavior(unit p1, string p2);
native void UnitBehaviorRemove(unit p1, string p2, int p3);
native void UnitBehaviorRemovePlayer(unit p1, string p2, int p3, int p4);
native void UnitBehaviorTransfer(unit p1, unit p2, string p3, int p4);
native bool UnitBehaviorHasFlag(string p1, int p2);
native void UnitBehaviorRemoveCategory(unit p1, int p2);
native void UnitBehaviorAddChargeRegen(unit p1, string p2, string p3, fixed p4);
native fixed UnitBehaviorGetChargeRegen(unit p1, string p2, string p3);
native void UnitBehaviorAddChargeUsed(unit p1, string p2, string p3, fixed p4);
native fixed UnitBehaviorGetChargeUsed(unit p1, string p2, string p3);
native void UnitBehaviorAddCooldown(unit p1, string p2, string p3, fixed p4);
native fixed UnitBehaviorGetCooldown(unit p1, string p2, string p3);
native void UnitXPGainEnable(unit p1, string p2, bool p3);
native marker UnitMarker(unit p1, int p2);
native void UnitMarkerAdd(unit p1, marker p2);
native int UnitMarkerCount(unit p1, marker p2);
native void UnitMarkerRemove(unit p1, marker p2);
native order UnitOrder(unit p1, int p2);
native int UnitOrderCount(unit p1);
native bool UnitOrderHasAbil(unit p1, string p2);
native bool UnitOrderIsValid(unit p1, order p2);
native bool UnitIsHarvesting(unit p1, int p2);
native bool UnitIssueOrder(unit p1, order p2, int p3);
native int UnitRallyPoint(unit p1, unit p2);
native int UnitRallyPointCount(unit p1);
native int UnitRallyPointTargetCount(unit p1, int p2);
native point UnitRallyPointTargetPoint(unit p1, int p2, int p3);
native unit UnitRallyPointTargetUnit(unit p1, int p2, int p3);
native int UnitTechTreeBehaviorCount(unit p1, string p2, int p3);
native int UnitTechTreeUnitCount(unit p1, string p2, int p3);
native int UnitTechTreeUpgradeCount(unit p1, string p2, int p3);
native int UnitInventoryContainer(unit p1);
native int UnitInventoryCount(unit p1, int p2);
native unit UnitInventoryCreate(unit p1, string p2);
native unitgroup UnitInventoryGroup(unit p1);
native int UnitInventoryIndex(unit p1);
native unit UnitInventoryItem(unit p1, int p2);
native unit UnitInventoryLastCreated();
native void UnitInventoryMove(unit p1, int p2, int p3);
native int UnitInventorySlot(unit p1);
native unit UnitInventoryUnit(unit p1);
native void UnitWeaponAdd(unit p1, string p2, string p3);
native int UnitWeaponCount(unit p1);
native bool UnitWeaponCheck(unit p1, int p2, int p3);
native string UnitWeaponGet(unit p1, int p2);
native bool UnitWeaponIsEnabled(unit p1, int p2);
native fixed UnitWeaponPeriod(unit p1, int p2);
native void UnitWeaponRemove(unit p1, string p2);
native bool UnitWeaponsPlaneTest(unit p1, int p2);
native fixed UnitXPTotal(unit p1);
native int UnitLevel(unit p1);
native string UnitTypeFromString(string p1);
native text UnitTypeGetName(string p1);
native fixed UnitTypeGetProperty(string p1, int p2);
native int UnitTypeGetCost(string p1, int p2);
native bool UnitTypeTestFlag(string p1, int p2);
native bool UnitTypeTestAttribute(string p1, int p2);
native bool UnitTypeIsAffectedByUpgrade(string p1, string p2);
native void UnitTypeAnimationLoad(string p1, string p2);
native void UnitTypeAnimationUnload(string p1, string p2);
native void TriggerAddEventUnitCreated(trigger p1, unitref p2, string p3, string p4);
native void TriggerAddEventUnitRemoved(trigger p1, unitref p2);
native void TriggerAddEventUnitDied(trigger p1, unitref p2);
native void TriggerAddEventUnitGainExperience(trigger p1, unitref p2);
native void TriggerAddEventUnitGainLevel(trigger p1, unitref p2);
native void TriggerAddEventUnitAcquiredTarget(trigger p1, unitref p2);
native void TriggerAddEventUnitStartedAttack(trigger p1, unitref p2);
native void TriggerAddEventUnitAttacked(trigger p1, unitref p2);
native void TriggerAddEventUnitAttributeChange(trigger p1, unitref p2);
native void TriggerAddEventUnitDamaged(trigger p1, unitref p2, int p3, int p4, string p5);
native void TriggerAddEventUnitBecomesIdle(trigger p1, unitref p2, bool p3);
native void TriggerAddEventUnitInventoryChange(trigger p1, unitref p2, int p3, unitref p4);
native unit EventUnit();
native unit EventUnitTarget();
native unit EventUnitCreatedUnit();
native string EventUnitCreatedAbil();
native string EventUnitCreatedBehavior();
native fixed EventUnitDamageAmount();
native unit EventUnitDamageSourceUnit();
native int EventUnitDamageSourcePlayer();
native point EventUnitDamageSourcePoint();
native bool EventUnitDamageDeathCheck(int p1);
native string EventUnitDamageEffect();
native string EventUnitBehavior();
native fixed EventUnitXPDelta();
native int EventUnitAttributePoints();
native unit EventUnitInventoryItem();
native int EventUnitInventoryItemContainer();
native int EventUnitInventoryItemSlot();
native point EventUnitInventoryItemTargetPoint();
native unit EventUnitInventoryItemTargetUnit();
native void TriggerAddEventUnitProperty(trigger p1, unitref p2, int p3);
native void TriggerAddEventUnitRegion(trigger p1, unitref p2, region p3, bool p4);
native void TriggerAddEventUnitRange(trigger p1, unitref p2, unit p3, fixed p4, bool p5);
native void TriggerAddEventUnitRangePoint(trigger p1, unitref p2, point p3, fixed p4, bool p5);
native void TriggerAddEventUnitCargo(trigger p1, unitref p2, bool p3);
native region EventUnitRegion();
native unit EventUnitCargo();
native void TriggerAddEventUnitSelected(trigger p1, unitref p2, int p3, bool p4);
native void TriggerAddEventUnitClick(trigger p1, unitref p2, int p3);
native void TriggerAddEventUnitHighlight(trigger p1, unitref p2, int p3, bool p4);
native void TriggerAddEventUnitOrder(trigger p1, unitref p2, abilcmd p3);
native order EventUnitOrder();
native void TriggerAddEventUnitAbility(trigger p1, unitref p2, abilcmd p3, int p4, bool p5);
native abilcmd EventUnitAbility();
native int EventUnitAbilityStage();
native point EventUnitTargetPoint();
native unit EventUnitTargetUnit();
native void TriggerAddEventUnitConstructProgress(trigger p1, unitref p2, int p3);
native void TriggerAddEventUnitTrainProgress(trigger p1, unitref p2, int p3);
native void TriggerAddEventUnitResearchProgress(trigger p1, unitref p2, int p3);
native void TriggerAddEventUnitArmMagazineProgress(trigger p1, unitref p2, int p3);
native void TriggerAddEventUnitSpecializeProgress(trigger p1, unitref p2, int p3);
native string EventUnitProgressObjectType();
native unit EventUnitProgressUnit();
native void TriggerAddEventUnitPowerup(trigger p1, unitref p2);
native unit EventUnitPowerupUnit();
native void TriggerAddEventUnitRevive(trigger p1, unitref p2);
native unitfilter UnitFilter(int p1, int p2, int p3, int p4);
native unitfilter UnitFilterStr(string p1);
native void UnitFilterSetState(unitfilter p1, int p2, int p3);
native int UnitFilterGetState(unitfilter p1, int p2);
native bool UnitFilterMatch(unit p1, int p2, unitfilter p3);
native unitgroup UnitGroupEmpty();
native unitgroup UnitGroupCopy(unitgroup p1);
native unitgroup UnitGroupFromId(int p1);
native unitgroup UnitGroupAlliance(int p1, int p2, region p3, unitfilter p4, int p5);
native unitgroup UnitGroup(string p1, int p2, region p3, unitfilter p4, int p5);
native unitgroup UnitGroupFilter(string p1, int p2, unitgroup p3, unitfilter p4, int p5);
native unitgroup UnitGroupFilterAlliance(unitgroup p1, int p2, int p3, int p4);
native unitgroup UnitGroupFilterPlayer(unitgroup p1, int p2, int p3);
native unitgroup UnitGroupFilterPlane(unitgroup p1, int p2, int p3);
native unitgroup UnitGroupFilterRegion(unitgroup p1, region p2, int p3);
native unitgroup UnitGroupFilterThreat(unitgroup p1, unit p2, string p3, int p4);
native unitgroup UnitGroupIdle(int p1, bool p2);
native void UnitGroupClear(unitgroup p1);
native void UnitGroupAdd(unitgroup p1, unit p2);
native void UnitGroupRemove(unitgroup p1, unit p2);
native bool UnitGroupIssueOrder(unitgroup p1, order p2, int p3);
native void UnitGroupWaitUntilIdle(unitgroup p1, int p2, bool p3);
native int UnitGroupCount(unitgroup p1, int p2);
native unit UnitGroupUnit(unitgroup p1, int p2);
native unit UnitGroupRandomUnit(unitgroup p1, int p2);
native bool UnitGroupHasUnit(unitgroup p1, unit p2);
native bool UnitGroupTestPlane(unitgroup p1, int p2);
native unit UnitGroupNearestUnit(unitgroup p1, point p2);
native unitref UnitRefFromUnit(unit p1);
native unitref UnitRefFromVariable(string p1);
native unit UnitRefToUnit(unitref p1);
native void UnitSelect(unit p1, int p2, bool p3);
native void UnitGroupSelect(unitgroup p1, int p2, bool p3);
native void UnitClearSelection(int p1);
native bool UnitIsSelected(unit p1, int p2);
native unitgroup UnitGroupSelected(int p1);
native void UnitFlashSelection(unit p1, fixed p2);
native void UnitControlGroupAddUnit(int p1, int p2, unit p3);
native void UnitControlGroupAddUnits(int p1, int p2, unitgroup p3);
native void UnitControlGroupRemoveUnit(int p1, int p2, unit p3);
native void UnitControlGroupRemoveUnits(int p1, int p2, unitgroup p3);
native void UnitControlGroupClear(int p1, int p2);
native void UISetMode(playergroup p1, int p2, fixed p3);
native void UISetWorldVisible(playergroup p1, bool p2);
native void UISetCursorVisible(playergroup p1, bool p2);
native void UISetCursorAutoHide(playergroup p1, bool p2, fixed p3);
native void UIDisplayMessage(playergroup p1, int p2, text p3);
native void UIClearMessages(playergroup p1, int p2);
native void UIShowCinematicText(playergroup p1, text p2, fixed p3, fixed p4, soundlink p5);
native void UIHideCinematicText(playergroup p1);
native void UIShowTextCrawl(playergroup p1, text p2, text p3, fixed p4, soundlink p5, soundlink p6);
native void UIHideTextCrawl(playergroup p1);
native void UIUnitColorStyleOverride(playergroup p1, int p2);
native void UIUnitColorStyleClearOverride(playergroup p1);
native void UIFlyerHelperOverride(playergroup p1, int p2);
native void UIFlyerHelperClearOverride(playergroup p1);
native void UISetNextLoadingScreen(string p1, text p2, text p3, text p4, text p5, bool p6);
native void UISetNextLoadingScreenImageScale(int p1);
native void UISetNextLoadingScreenTextPosition(int p1, int p2, int p3, int p4, int p5);
native void UISetRestartLoadingScreen(text p1);
native void UIAlert(string p1, int p2, text p3, string p4);
native void UIAlertPoint(string p1, int p2, text p3, string p4, point p5);
native void UIAlertUnit(string p1, int p2, text p3, string p4, unit p5);
native void UIAlertClear(int p1);
native void UISetFrameVisible(playergroup p1, int p2, bool p3);
native bool UIFrameVisible(int p1, int p2);
native void UISetGameMenuItemVisible(playergroup p1, int p2, bool p3);
native bool UIGameMenuItemVisible(int p1, int p2);
native void UISetGameMenuItemText(playergroup p1, int p2, text p3);
native void UIClearCustomMenuItemList(playergroup p1);
native void UISetCustomMenuItemVisible(playergroup p1, int p2, bool p3);
native bool UICustomMenuItemVisible(int p1, int p2);
native void UISetCustomMenuItemText(playergroup p1, int p2, text p3);
native void UIShowCustomMenu(playergroup p1, text p2);
native void UIShowCustomDialog(playergroup p1, int p2, text p3, text p4, bool p5);
native void UISetResourceTradeCountdownTime(int p1);
native void UISetButtonHighlighted(playergroup p1, abilcmd p2, bool p3);
native void UISetMiniMapBackGroundColor(color p1);
native void UISetMiniMapCameraFoVVisible(bool p1);
native void UISetCommandAllowed(playergroup p1, int p2, bool p3);
native void UISetCommandDisallowedMessage(playergroup p1, text p2);
native void UISetChallengeMode(playergroup p1, bool p2);
native void UISetChallengeScoreText(playergroup p1, string p2, text p3);
native void UISetChallengeHighScore(playergroup p1, string p2, int p3);
native void UISetChallengeCompleted(playergroup p1, string p2, bool p3);
native void UISetBattleNetButtonOffset(playergroup p1, int p2, int p3);
native void UIClearBattleNetButtonOffset(playergroup p1);
native void TriggerAddEventAbortMission(trigger p1, int p2);
native void TriggerAddEventCustomDialogDismissed(trigger p1, int p2, int p3);
native void TriggerAddEventGameMenuItemSelected(trigger p1, int p2, int p3);
native void TriggerAddEventMouseClicked(trigger p1, int p2, int p3, bool p4);
native void TriggerAddEventKeyPressed(trigger p1, int p2, int p3, bool p4, int p5, int p6, int p7);
native void TriggerAddEventButtonPressed(trigger p1, int p2, string p3);
native void TriggerAddEventGameCreditsFinished(trigger p1, int p2);
native int EventCustomDialogResult();
native int EventGameMenuItemSelected();
native int EventMouseClickedButton();
native int EventMouseClickedPosXUI();
native int EventMouseClickedPosYUI();
native fixed EventMouseClickedPosXWorld();
native fixed EventMouseClickedPosYWorld();
native fixed EventMouseClickedPosZWorld();
native int EventKeyPressed();
native bool EventKeyShift();
native bool EventKeyControl();
native bool EventKeyAlt();
native string EventButtonPressed();
native void VisEnable(int p1, bool p2);
native bool VisIsEnabled(int p1);
native void VisExploreArea(int p1, region p2, bool p3, bool p4);
native void VisRevealArea(int p1, region p2, fixed p3, bool p4);
native revealer VisRevealerCreate(int p1, region p2);
native revealer VisRevealerLastCreated();
native void VisRevealerDestroy(revealer p1);
native void VisRevealerEnable(revealer p1, bool p2);
native void VisRevealerUpdate(revealer p1);
